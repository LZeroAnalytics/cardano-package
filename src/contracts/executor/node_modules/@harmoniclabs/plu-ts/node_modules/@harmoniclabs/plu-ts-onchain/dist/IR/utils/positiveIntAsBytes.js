"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.positiveBigIntAsBytes = exports.positiveIntAsBytes = void 0;
var uint8array_utils_1 = require("@harmoniclabs/uint8array-utils");
/**
 * writes the number in a new `Uint8Array` Big Endian
 */
function positiveIntAsBytes(n) {
    if (typeof n === "bigint") {
        return positiveBigIntAsBytes(n);
    }
    if (!Number.isSafeInteger(n) || n < 0) {
        console.log(n);
        console.trace(); // some help
        throw new Error("how did you end up here? the name of the function explicitly says 'positiveIntAsBytes'");
    }
    var max = 0x100;
    var nBytes = 1;
    while (max <= n) {
        nBytes++;
        max = max << 8;
    }
    var result = new Uint8Array(nBytes);
    // just reuse some variable
    while (n > 0) {
        result[--nBytes] = n & 0xff;
        n = n >>> 8;
    }
    return result;
}
exports.positiveIntAsBytes = positiveIntAsBytes;
function positiveBigIntAsBytes(n) {
    if (n < 0 || typeof n !== "bigint") {
        console.log(n);
        console.trace(); // some help
        throw new Error("how did you end up here? the name of the function explicitly says 'positiveBigIntAsBytes'");
    }
    var strHex = n.toString(16);
    strHex = strHex.length % 2 === 0 ? strHex : "0" + strHex;
    return (0, uint8array_utils_1.fromHex)(strHex);
}
exports.positiveBigIntAsBytes = positiveBigIntAsBytes;
