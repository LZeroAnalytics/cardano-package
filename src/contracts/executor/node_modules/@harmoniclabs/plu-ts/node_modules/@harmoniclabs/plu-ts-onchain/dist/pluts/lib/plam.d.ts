import { PLam } from "../PTypes/index.js";
import { Term } from "../Term/index.js";
import { ToPType } from "../type_system/ts-pluts-conversion.js";
import { TermType } from "../type_system/types.js";
import { UtilityTermOf } from "./std/UtilityTerms/addUtilityForType.js";
import { PappResult } from "./papp.js";
export declare function plam<A extends TermType, B extends TermType>(inputType: A, outputType: B): (termFunc: (input: UtilityTermOf<ToPType<A>>) => Term<ToPType<B>>, funcName?: string | undefined) => PappResult<PLam<ToPType<A>, ToPType<B>>>;
