"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Signature = void 0;
var assert_1 = require("../../utils/assert.js");
var Hash_1 = require("../Hash.js");
var Signature = /** @class */ (function (_super) {
    __extends(Signature, _super);
    function Signature(bs) {
        var _this = _super.call(this, bs instanceof Signature ? bs.asBytes : bs) || this;
        (0, assert_1.assert)(_this._bytes.length === 64, "'Signature' must be an hash of length 64");
        return _this;
    }
    Signature.prototype.clone = function () {
        return new Signature(this.toBuffer());
    };
    Signature.prototype.valueOf = function () {
        return this.toString();
    };
    Signature.fromCbor = function (cStr) {
        return new Signature(Hash_1.Hash.fromCbor(cStr).asBytes);
    };
    Signature.fromCborObj = function (cObj) {
        return new Signature(Hash_1.Hash.fromCborObj(cObj).asBytes);
    };
    return Signature;
}(Hash_1.Hash));
exports.Signature = Signature;
