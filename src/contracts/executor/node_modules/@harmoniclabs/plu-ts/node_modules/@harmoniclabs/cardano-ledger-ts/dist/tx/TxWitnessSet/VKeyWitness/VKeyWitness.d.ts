import { ToCbor, CborString, CborObj, CanBeCborString } from "@harmoniclabs/cbor";
import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { Hash32 } from "../../../hashes/Hash32/Hash32.js";
import { Signature } from "../../../hashes/Signature/index.js";
import { ToJson } from "../../../utils/ToJson.js";
import { VKey } from "./VKey.js";
export declare class VKeyWitness implements ToCbor, Cloneable<VKeyWitness>, ToJson {
    readonly vkey: VKey;
    readonly signature: Signature;
    constructor(vkey: Hash32, signature: Signature);
    clone(): VKeyWitness;
    toCbor(): CborString;
    toCborObj(): CborObj;
    static fromCbor(cStr: CanBeCborString): VKeyWitness;
    static fromCborObj(cObj: CborObj): VKeyWitness;
    toJson(): {
        vkey: string;
        signature: string;
    };
}
