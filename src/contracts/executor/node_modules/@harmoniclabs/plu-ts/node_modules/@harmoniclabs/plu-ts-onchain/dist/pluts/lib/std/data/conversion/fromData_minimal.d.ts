import { PData } from "../../../../PTypes/index.js";
import { TermFn } from "../../../../PTypes/PFn/PFn.js";
import { Term } from "../../../../Term/index.js";
import { TermType } from "../../../../type_system/index.js";
import { ToPType } from "../../../../type_system/ts-pluts-conversion.js";
/**
 * @deprecated use `_fromData` instead
 */
export declare const fromData_minimal: typeof _fromData;
export declare function _fromData<T extends TermType>(t: T): (term: Term<PData>) => Term<ToPType<T>>;
/**
 * @deprecated use `_pfromData` instead
 */
export declare const pfromData_minimal: typeof _pfromData;
export declare function _pfromData<T extends TermType>(t: T): TermFn<[PData], ToPType<T>>;
