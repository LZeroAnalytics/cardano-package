"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._plet = void 0;
var IRHoisted_1 = require("../../../IR/IRNodes/IRHoisted.js");
var IRLetted_1 = require("../../../IR/IRNodes/IRLetted.js");
var IRVar_1 = require("../../../IR/IRNodes/IRVar.js");
var isClosedIRTerm_1 = require("../../../IR/utils/isClosedIRTerm.js");
var Term_1 = require("../../Term/index.js");
function _plet(varValue) {
    return new Term_1.Term(varValue.type, function (dbn) {
        var ir = varValue.toIR(dbn);
        // `compileIRToUPLC` can handle it even if this check is not present
        // but why spend useful tree iterations if we can avoid them here?
        if (ir instanceof IRLetted_1.IRLetted ||
            ir instanceof IRHoisted_1.IRHoisted ||
            ir instanceof IRVar_1.IRVar) {
            return ir;
        }
        if ((0, isClosedIRTerm_1.isClosedIRTerm)(ir)) {
            return new IRHoisted_1.IRHoisted(ir);
        }
        return new IRLetted_1.IRLetted(Number(dbn), ir);
    });
}
exports._plet = _plet;
