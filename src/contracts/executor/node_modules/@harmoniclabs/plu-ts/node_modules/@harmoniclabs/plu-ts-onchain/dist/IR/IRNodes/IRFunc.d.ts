import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { ToJson } from "../../utils/ToJson.js";
import { IRTerm } from "../IRTerm.js";
import { IHash } from "../interfaces/IHash.js";
import { IIRParent } from "../interfaces/IIRParent.js";
import { BaseIRMetadata } from "./BaseIRMetadata.js";
export interface IRFuncMetadata extends BaseIRMetadata {
}
export declare class IRFunc implements Cloneable<IRFunc>, IHash, IIRParent, ToJson {
    readonly arity: number;
    readonly hash: Uint8Array;
    markHashAsInvalid: () => void;
    readonly meta: IRFuncMetadata;
    get name(): string | undefined;
    body: IRTerm;
    parent: IRTerm | undefined;
    clone: () => IRFunc;
    constructor(arity: number, body: IRTerm, func_name?: string | undefined);
    static get tag(): Uint8Array;
    toJson(): any;
}
