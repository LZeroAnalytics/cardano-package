import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { ToJson } from "../../utils/ToJson.js";
import { IRTerm } from "../IRTerm.js";
import { IHash } from "../interfaces/IHash.js";
import { IIRParent } from "../interfaces/IIRParent.js";
import { IRParentTerm } from "../utils/isIRParentTerm.js";
import { BaseIRMetadata } from "./BaseIRMetadata.js";
export interface IRDelayedMetadata extends BaseIRMetadata {
}
export declare class IRDelayed implements Cloneable<IRDelayed>, IHash, IIRParent, ToJson {
    delayed: IRTerm;
    readonly hash: Uint8Array;
    markHashAsInvalid: () => void;
    readonly meta: IRDelayedMetadata;
    parent: IRParentTerm | undefined;
    constructor(delayed: IRTerm);
    static get tag(): Uint8Array;
    clone(): IRDelayed;
    toJson(): any;
}
