import { PFn, PLam, TermFn } from "../../../PTypes/index.js";
import { Term } from "../../../Term/index.js";
import { ToPType } from "../../../type_system/index.js";
import { TermType } from "../../../type_system/types.js";
export declare const pcompose: <A extends TermType, B extends TermType, C extends TermType>(a: A, b: B, c: C) => Term<PFn<[
    PLam<ToPType<B>, ToPType<C>>,
    PLam<ToPType<A>, ToPType<B>>,
    ToPType<A>
], ToPType<C>>> & {
    $: (bToC: Term<PLam<ToPType<B>, ToPType<C>>>) => Term<PFn<[
        PLam<ToPType<A>, ToPType<B>>,
        ToPType<A>
    ], ToPType<C>>> & {
        $: (aToB: Term<PLam<ToPType<A>, ToPType<B>>>) => TermFn<[ToPType<A>], ToPType<C>>;
    };
};
