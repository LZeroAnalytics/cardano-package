"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Linear3InZ = exports.Linear3InY = exports.Linear3InX = exports.LinearInAll3 = exports.XGtEqOrConst = exports.YGtEqOrConst = exports.LinearOnEqualXY = exports.Linear2InMax = exports.Linear2InMin = exports.Linear2InBothMult = exports.Linear2InBothSub = exports.Linear2InBothAdd = exports.Linear2InY = exports.Linear2InX = exports.Linear1 = exports.FixedCost = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var bigint_utils_1 = require("@harmoniclabs/bigint-utils");
var FixedCost = /** @class */ (function () {
    function FixedCost(constant) {
        (0, obj_utils_1.defineReadOnlyProperty)(this, "const", BigInt(constant));
    }
    FixedCost.prototype.at = function () {
        var xs = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            xs[_i] = arguments[_i];
        }
        return this.const;
    };
    return FixedCost;
}());
exports.FixedCost = FixedCost;
var BaseLinear = /** @class */ (function () {
    function BaseLinear(quote, slope) {
        (0, obj_utils_1.defineReadOnlyProperty)(this, "quote", BigInt(quote));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "slope", BigInt(slope));
    }
    return BaseLinear;
}());
var Linear1 = /** @class */ (function (_super) {
    __extends(Linear1, _super);
    function Linear1(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear1.prototype.at = function (x) { return this.quote + (x * this.slope); };
    return Linear1;
}(BaseLinear));
exports.Linear1 = Linear1;
var Linear2InX = /** @class */ (function (_super) {
    __extends(Linear2InX, _super);
    function Linear2InX(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InX.prototype.at = function (x, y) { return this.quote + (x * this.slope); };
    return Linear2InX;
}(BaseLinear));
exports.Linear2InX = Linear2InX;
var Linear2InY = /** @class */ (function (_super) {
    __extends(Linear2InY, _super);
    function Linear2InY(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InY.prototype.at = function (x, y) { return this.quote + (y * this.slope); };
    return Linear2InY;
}(BaseLinear));
exports.Linear2InY = Linear2InY;
var Linear2InBothAdd = /** @class */ (function (_super) {
    __extends(Linear2InBothAdd, _super);
    function Linear2InBothAdd(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InBothAdd.prototype.at = function (x, y) { return this.quote + ((x + y) * this.slope); };
    return Linear2InBothAdd;
}(BaseLinear));
exports.Linear2InBothAdd = Linear2InBothAdd;
var Linear2InBothSub = /** @class */ (function (_super) {
    __extends(Linear2InBothSub, _super);
    function Linear2InBothSub(quote, slope, min) {
        var _this = _super.call(this, quote, slope) || this;
        (0, obj_utils_1.defineReadOnlyProperty)(_this, "min", BigInt(min));
        return _this;
    }
    Linear2InBothSub.prototype.at = function (x, y) { return this.quote + ((0, bigint_utils_1.max)(this.min, (x - y)) * this.slope); };
    return Linear2InBothSub;
}(BaseLinear));
exports.Linear2InBothSub = Linear2InBothSub;
var Linear2InBothMult = /** @class */ (function (_super) {
    __extends(Linear2InBothMult, _super);
    function Linear2InBothMult(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InBothMult.prototype.at = function (x, y) { return this.quote + ((x * y) * this.slope); };
    return Linear2InBothMult;
}(BaseLinear));
exports.Linear2InBothMult = Linear2InBothMult;
var Linear2InMin = /** @class */ (function (_super) {
    __extends(Linear2InMin, _super);
    function Linear2InMin(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InMin.prototype.at = function (x, y) { return this.quote + ((0, bigint_utils_1.min)(x, y) * this.slope); };
    return Linear2InMin;
}(BaseLinear));
exports.Linear2InMin = Linear2InMin;
var Linear2InMax = /** @class */ (function (_super) {
    __extends(Linear2InMax, _super);
    function Linear2InMax(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InMax.prototype.at = function (x, y) { return this.quote + ((0, bigint_utils_1.max)(x, y) * this.slope); };
    return Linear2InMax;
}(BaseLinear));
exports.Linear2InMax = Linear2InMax;
var LinearOnEqualXY = /** @class */ (function (_super) {
    __extends(LinearOnEqualXY, _super);
    function LinearOnEqualXY(quote, slope, constant) {
        var _this = _super.call(this, quote, slope) || this;
        (0, obj_utils_1.defineReadOnlyProperty)(_this, "const", BigInt(constant));
        return _this;
    }
    LinearOnEqualXY.prototype.at = function (x, y) { return x === y ? this.quote + (x * this.slope) : this.const; };
    return LinearOnEqualXY;
}(BaseLinear));
exports.LinearOnEqualXY = LinearOnEqualXY;
var YGtEqOrConst = /** @class */ (function () {
    function YGtEqOrConst(constant, f) {
        (0, obj_utils_1.defineReadOnlyProperty)(this, "const", BigInt(constant));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "f", f);
    }
    YGtEqOrConst.prototype.at = function (x, y) { return x > y ? this.const : this.f.at(x, y); };
    return YGtEqOrConst;
}());
exports.YGtEqOrConst = YGtEqOrConst;
var XGtEqOrConst = /** @class */ (function () {
    function XGtEqOrConst(constant, f) {
        (0, obj_utils_1.defineReadOnlyProperty)(this, "const", BigInt(constant));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "f", f);
    }
    XGtEqOrConst.prototype.at = function (x, y) { return x < y ? this.const : this.f.at(x, y); };
    return XGtEqOrConst;
}());
exports.XGtEqOrConst = XGtEqOrConst;
var LinearInAll3 = /** @class */ (function (_super) {
    __extends(LinearInAll3, _super);
    function LinearInAll3(quote, slope, constant) {
        return _super.call(this, quote, slope) || this;
    }
    LinearInAll3.prototype.at = function (x, y, z) { return this.quote + ((x + y + z) * this.slope); };
    return LinearInAll3;
}(BaseLinear));
exports.LinearInAll3 = LinearInAll3;
var Linear3InX = /** @class */ (function (_super) {
    __extends(Linear3InX, _super);
    function Linear3InX(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InX.prototype.at = function (x, y, z) { return this.quote + (x * this.slope); };
    return Linear3InX;
}(BaseLinear));
exports.Linear3InX = Linear3InX;
var Linear3InY = /** @class */ (function (_super) {
    __extends(Linear3InY, _super);
    function Linear3InY(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InY.prototype.at = function (x, y, z) { return this.quote + (y * this.slope); };
    return Linear3InY;
}(BaseLinear));
exports.Linear3InY = Linear3InY;
var Linear3InZ = /** @class */ (function (_super) {
    __extends(Linear3InZ, _super);
    function Linear3InZ(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InZ.prototype.at = function (x, y, z) { return this.quote + (z * this.slope); };
    return Linear3InZ;
}(BaseLinear));
exports.Linear3InZ = Linear3InZ;
