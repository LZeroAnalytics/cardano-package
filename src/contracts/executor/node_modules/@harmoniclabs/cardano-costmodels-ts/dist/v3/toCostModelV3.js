"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCostModelV3 = void 0;
var isArrayish_1 = require("../utils/isArrayish.js");
var costModelV3Keys_1 = require("./costModelV3Keys.js");
var defaultV3Costs_1 = require("./defaultV3Costs.js");
var N_COST_MODEL_PLUTUS_V3_1 = require("./N_COST_MODEL_PLUTUS_V3.js");
var ints_1 = require("../utils/ints.js");
var toCostModelArrV3_1 = require("./toCostModelArrV3.js");
function toCostModelV3(v3) {
    if ((0, isArrayish_1.isArrayish)(v3))
        v3 = (0, isArrayish_1.forceArrayish)(v3);
    if (!Array.isArray(v3))
        return __assign(__assign({}, defaultV3Costs_1.defaultV3Costs), v3);
    var result = __assign({}, defaultV3Costs_1.defaultV3Costs);
    if (v3.length < N_COST_MODEL_PLUTUS_V3_1.N_COST_MODEL_PLUTUS_V3_CHANG_1)
        throw new Error("impossible to convert cost model v3 array to object; not enough arguments; arguments found in total: "
            + v3.length.toString());
    if (v3.length < N_COST_MODEL_PLUTUS_V3_1.N_COST_MODEL_PLUTUS_V3)
        v3 = (0, toCostModelArrV3_1.toCostModelArrV3)(v3);
    for (var i = 0; i < N_COST_MODEL_PLUTUS_V3_1.N_COST_MODEL_PLUTUS_V3; i++) {
        var value = v3[i];
        result[costModelV3Keys_1.costModelV3Keys[i]] = Number((0, ints_1.canBeInteger)(value) ? value :
            defaultV3Costs_1.defaultV3Costs[costModelV3Keys_1.costModelV3Keys[i]]);
    }
    return result;
}
exports.toCostModelV3 = toCostModelV3;
