"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.forceArrayish = exports.isArrayish = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
function isIntStr(str) {
    return /^\d+$/.test(str);
}
function isArrayish(value) {
    if (!((0, obj_utils_1.isObject)(value) &&
        value.length === undefined))
        return false;
    var keys = Object.keys(value);
    if (keys.length === 0)
        return true;
    if (!keys.every(isIntStr))
        return false;
    var idxsCopy = keys.map(function (k) { return parseInt(k, 10); });
    var _loop_1 = function (i) {
        var j = idxsCopy.findIndex(function (idx) { return idx === i; });
        // assert every number is present up to the max
        if (j === -1)
            return { value: false };
        // remove from copy to speed up later iterations
        void idxsCopy.splice(j, 1);
    };
    for (var i = 0; idxsCopy.length > 0; i++) {
        var state_1 = _loop_1(i);
        if (typeof state_1 === "object")
            return state_1.value;
    }
    return true;
}
exports.isArrayish = isArrayish;
function forceArrayish(arrish) {
    return new Array(Object.keys(arrish).length)
        .fill(0)
        .map(function (_, i) { return arrish[i]; });
}
exports.forceArrayish = forceArrayish;
