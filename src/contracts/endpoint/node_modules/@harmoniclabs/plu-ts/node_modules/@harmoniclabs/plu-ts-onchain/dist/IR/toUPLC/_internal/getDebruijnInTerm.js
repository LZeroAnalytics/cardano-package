"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDebruijnInTerm = void 0;
var uint8array_utils_1 = require("@harmoniclabs/uint8array-utils");
var IRApp_1 = require("../../IRNodes/IRApp.js");
var IRDelayed_1 = require("../../IRNodes/IRDelayed.js");
var IRForced_1 = require("../../IRNodes/IRForced.js");
var IRFunc_1 = require("../../IRNodes/IRFunc.js");
var IRLetted_1 = require("../../IRNodes/IRLetted.js");
function getDebruijnInTerm(root, termToFind) {
    var termTofindHash = termToFind.hash;
    var stack = [{ term: root, dbn: 0 }];
    while (stack.length > 0) {
        var _a = stack.pop(), term = _a.term, dbn = _a.dbn;
        if (term === termToFind || (0, uint8array_utils_1.uint8ArrayEq)(term.hash, termTofindHash))
            return dbn;
        if (term instanceof IRApp_1.IRApp) {
            stack.push({ term: term.fn, dbn: dbn }, { term: term.arg, dbn: dbn });
            continue;
        }
        if (term instanceof IRDelayed_1.IRDelayed) {
            stack.push({ term: term.delayed, dbn: dbn });
            continue;
        }
        if (term instanceof IRForced_1.IRForced) {
            stack.push({ term: term.forced, dbn: dbn });
            continue;
        }
        if (term instanceof IRFunc_1.IRFunc) {
            stack.push({ term: term.body, dbn: dbn + term.arity });
            continue;
        }
        if (term instanceof IRLetted_1.IRLetted) {
            stack.push({ term: term.value, dbn: dbn });
            continue;
        }
    }
    return -1;
}
exports.getDebruijnInTerm = getDebruijnInTerm;
