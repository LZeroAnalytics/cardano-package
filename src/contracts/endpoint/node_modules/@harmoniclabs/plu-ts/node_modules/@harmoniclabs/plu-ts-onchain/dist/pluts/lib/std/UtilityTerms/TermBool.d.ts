import type { PBool, TermFn, PDelayed } from "../../../PTypes/index.js";
import type { PappArg } from "../../pappArg.js";
import { Term } from "../../../Term/index.js";
export type TermBool = Term<PBool> & {
    readonly por: TermFn<[PDelayed<PBool>], PBool>;
    readonly or: (other: PappArg<PBool>) => TermBool;
    readonly pstrictOr: TermFn<[PBool], PBool>;
    readonly strictOr: (other: PappArg<PBool>) => TermBool;
    readonly pand: TermFn<[PDelayed<PBool>], PBool>;
    readonly and: (other: PappArg<PBool>) => TermBool;
    readonly pstrictAnd: TermFn<[PBool], PBool>;
    readonly strictAnd: (other: PappArg<PBool>) => TermBool;
    readonly peq: TermFn<[PBool], PBool>;
    readonly eq: (other: PappArg<PBool>) => TermBool;
};
export declare function addPBoolMethods(term: Term<PBool>): TermBool;
