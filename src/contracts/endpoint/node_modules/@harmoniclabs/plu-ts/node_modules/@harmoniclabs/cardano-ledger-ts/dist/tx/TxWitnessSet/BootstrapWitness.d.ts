import { ToCbor, CborString, CborObj, CanBeCborString } from "@harmoniclabs/cbor";
import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { Hash32 } from "../../hashes/Hash32/Hash32.js";
import { Signature } from "../../hashes/Signature/index.js";
import { ToJson } from "../../utils/ToJson.js";
import { VKey } from "./VKeyWitness/VKey.js";
export declare class BootstrapWitness implements ToCbor, Cloneable<BootstrapWitness>, ToJson {
    readonly pubKey: VKey;
    readonly signature: Signature;
    readonly chainCode: Hash32;
    readonly attributes: Uint8Array;
    constructor(pubKey: Hash32, signature: Signature, chainCode: Hash32, attributes: Uint8Array);
    clone(): BootstrapWitness;
    toCbor(): CborString;
    toCborObj(): CborObj;
    static fromCbor(cStr: CanBeCborString): BootstrapWitness;
    static fromCborObj(cObj: CborObj): BootstrapWitness;
    toJson(): {
        pubKey: string;
        signature: string;
        chainCode: string;
        attributes: string;
    };
}
