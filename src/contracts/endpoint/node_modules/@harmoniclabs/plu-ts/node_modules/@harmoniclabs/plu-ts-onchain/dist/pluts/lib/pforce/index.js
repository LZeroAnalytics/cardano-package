"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pforce = void 0;
var IRDelayed_1 = require("../../../IR/IRNodes/IRDelayed.js");
var IRForced_1 = require("../../../IR/IRNodes/IRForced.js");
var Term_1 = require("../../Term/index.js");
var addUtilityForType_1 = require("../std/UtilityTerms/addUtilityForType.js");
function pforce(toForce) {
    var outType = toForce.type[0] === "delayed" /* PrimType.Delayed */ ? toForce.type[1] : toForce.type;
    return (0, addUtilityForType_1.addUtilityForType)(outType)(new Term_1.Term(outType, function (dbn) {
        var toForceUPLC = toForce.toIR(dbn);
        // if directly applying to Delay UPLC just remove the delay
        // example:
        // (force (delay (con int 11))) === (con int 11)
        if (toForceUPLC instanceof IRDelayed_1.IRDelayed) {
            return toForceUPLC.delayed;
        }
        // any other case
        return new IRForced_1.IRForced(toForceUPLC);
    }));
}
exports.pforce = pforce;
