import { CborArray, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { IGovAction } from "./IGovAction.js";
import { ITxOutRef, TxOutRef } from "../../tx/index.js";
import { IProtocolVerision, IProtocolVerisionObj } from "../../ledger/protocol/protocolVersion.js";
import { GovActionType } from "./GovActionType.js";
import { DataConstr, ToData } from "@harmoniclabs/plutus-data";
import { ToDataVersion } from "../../toData/defaultToDataVersion.js";
export interface IGovActionInitHardFork {
    govActionId?: ITxOutRef | undefined;
    protocolVersion: IProtocolVerision;
}
export declare function isIGovActionInitHardFork(stuff: any): stuff is IGovActionInitHardFork;
export declare class GovActionInitHardFork implements IGovAction, IGovActionInitHardFork, ToCbor, ToData {
    readonly subCborRef?: SubCborRef | undefined;
    readonly govActionType: GovActionType.InitHardFork;
    readonly govActionId: TxOutRef | undefined;
    readonly protocolVersion: IProtocolVerisionObj;
    constructor({ govActionId, protocolVersion }: IGovActionInitHardFork, subCborRef?: SubCborRef | undefined);
    toCbor(): CborString;
    toCborObj(): CborArray;
    toData(v?: ToDataVersion): DataConstr;
}
