"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TxRedeemer = exports.txRedeemerTagToString = exports.txRdmrTagToString = exports.TxRedeemerTag = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var plutus_data_1 = require("@harmoniclabs/plutus-data");
var plutus_machine_1 = require("@harmoniclabs/plutus-machine");
var BasePlutsError_1 = require("../../utils/BasePlutsError.js");
var InvalidCborFormatError_1 = require("../../utils/InvalidCborFormatError.js");
var assert_1 = require("../../utils/assert.js");
var ints_1 = require("../../utils/ints.js");
var getSubCborRef_1 = require("../../utils/getSubCborRef.js");
var TxRedeemerTag;
(function (TxRedeemerTag) {
    TxRedeemerTag[TxRedeemerTag["Spend"] = 0] = "Spend";
    TxRedeemerTag[TxRedeemerTag["Mint"] = 1] = "Mint";
    TxRedeemerTag[TxRedeemerTag["Cert"] = 2] = "Cert";
    TxRedeemerTag[TxRedeemerTag["Withdraw"] = 3] = "Withdraw";
    TxRedeemerTag[TxRedeemerTag["Voting"] = 4] = "Voting";
    TxRedeemerTag[TxRedeemerTag["Proposing"] = 5] = "Proposing";
})(TxRedeemerTag = exports.TxRedeemerTag || (exports.TxRedeemerTag = {}));
;
Object.freeze(TxRedeemerTag);
/** @deprecated */
function txRdmrTagToString(tag) {
    switch (tag) {
        case TxRedeemerTag.Cert: return "Cert";
        case TxRedeemerTag.Mint: return "Mint";
        case TxRedeemerTag.Spend: return "Spend";
        case TxRedeemerTag.Withdraw: return "Withdraw";
        case TxRedeemerTag.Voting: return "Voting";
        case TxRedeemerTag.Proposing: return "Proposing";
        default: return "";
    }
}
exports.txRdmrTagToString = txRdmrTagToString;
function txRedeemerTagToString(tag) {
    switch (tag) {
        case TxRedeemerTag.Spend: return "Spend";
        case TxRedeemerTag.Mint: return "Mint";
        case TxRedeemerTag.Cert: return "Cert";
        case TxRedeemerTag.Withdraw: return "Withdraw";
        case TxRedeemerTag.Voting: return "Voting";
        case TxRedeemerTag.Proposing: return "Proposing";
        default:
            throw new BasePlutsError_1.BasePlutsError("invalid TxRedeemerTag");
    }
}
exports.txRedeemerTagToString = txRedeemerTagToString;
var TxRedeemer = /** @class */ (function () {
    function TxRedeemer(redeemer, subCborRef) {
        this.subCborRef = subCborRef;
        (0, assert_1.assert)((0, obj_utils_1.isObject)(redeemer) &&
            (0, obj_utils_1.hasOwn)(redeemer, "tag") &&
            (0, obj_utils_1.hasOwn)(redeemer, "index") &&
            (0, obj_utils_1.hasOwn)(redeemer, "data") &&
            (0, obj_utils_1.hasOwn)(redeemer, "execUnits"), "invalid object passed to construct a 'TxRedeemer'");
        var tag = redeemer.tag, index = redeemer.index, data = redeemer.data, execUnits = redeemer.execUnits;
        (0, assert_1.assert)(tag === 0 || tag === 1 || tag === 2 || tag === 3, "invalid redeemer tag");
        (0, obj_utils_1.defineReadOnlyProperty)(this, "tag", tag);
        (0, assert_1.assert)((0, ints_1.canBeUInteger)(index), "invlaid redeemer index");
        (0, obj_utils_1.defineReadOnlyProperty)(this, "index", Number((0, ints_1.forceBigUInt)(index)));
        (0, assert_1.assert)((0, plutus_data_1.isData)(data), "redeemer's data was not 'Data'");
        (0, obj_utils_1.defineReadOnlyProperty)(this, "data", data);
        (0, assert_1.assert)(execUnits instanceof plutus_machine_1.ExBudget, "invalid 'execUnits' constructing 'TxRedeemer'");
        var _exUnits = execUnits.clone();
        (0, obj_utils_1.definePropertyIfNotPresent)(this, "execUnits", {
            get: function () { return _exUnits; },
            set: function (newExUnits) {
                (0, assert_1.assert)(newExUnits instanceof plutus_machine_1.ExBudget, "invalid 'execUnits' constructing 'TxRedeemer'");
                _exUnits = newExUnits.clone();
            },
            enumerable: true,
            configurable: false
        });
    }
    TxRedeemer.prototype.clone = function () {
        return new TxRedeemer(__assign(__assign({}, this), { data: this.data.clone(), execUnits: this.execUnits.clone() }));
    };
    TxRedeemer.prototype.toCborMapEntry = function () {
        return {
            k: new cbor_1.CborArray([
                new cbor_1.CborUInt(this.tag),
                new cbor_1.CborUInt(this.index),
            ]),
            v: new cbor_1.CborArray([
                (0, plutus_data_1.dataToCborObj)(this.data),
                this.execUnits.toCborObj()
            ])
        };
    };
    TxRedeemer.fromCborMapEntry = function (entry) {
        if (!((0, obj_utils_1.isObject)(entry) &&
            entry.k instanceof cbor_1.CborArray &&
            entry.k.array.length >= 2 &&
            entry.k.array[0] instanceof cbor_1.CborUInt &&
            entry.k.array[1] instanceof cbor_1.CborUInt &&
            entry.v instanceof cbor_1.CborArray &&
            entry.v.array.length >= 2))
            throw new Error("invalid CborMapEntry building TxRedeemer");
        return new TxRedeemer({
            tag: Number(entry.k.array[0].num),
            index: Number(entry.k.array[1].num),
            data: (0, plutus_data_1.dataFromCborObj)(entry.v.array[0]),
            execUnits: plutus_machine_1.ExBudget.fromCborObj(entry.v.array[1])
        });
    };
    TxRedeemer.prototype.toCbor = function () {
        if (this.subCborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return new cbor_1.CborString(this.subCborRef.toBuffer());
        }
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    TxRedeemer.prototype.toCborObj = function () {
        return new cbor_1.CborArray([
            new cbor_1.CborUInt(this.tag),
            new cbor_1.CborUInt(this.index),
            (0, plutus_data_1.dataToCborObj)(this.data),
            this.execUnits.toCborObj()
        ]);
    };
    TxRedeemer.fromCbor = function (cStr) {
        return TxRedeemer.fromCborObj(cbor_1.Cbor.parse((0, cbor_1.forceCborString)(cStr), { keepRef: true }));
    };
    TxRedeemer.fromCborObj = function (cObj) {
        if (!(cObj instanceof cbor_1.CborArray &&
            cObj.array.length >= 4 &&
            cObj.array[0] instanceof cbor_1.CborUInt &&
            cObj.array[1] instanceof cbor_1.CborUInt))
            throw new InvalidCborFormatError_1.InvalidCborFormatError("TxRedeemer");
        return new TxRedeemer({
            tag: Number(cObj.array[0].num),
            index: cObj.array[1].num,
            data: (0, plutus_data_1.dataFromCborObj)(cObj.array[2]),
            execUnits: plutus_machine_1.ExBudget.fromCborObj(cObj.array[3])
        }, (0, getSubCborRef_1.getSubCborRef)(cObj));
    };
    TxRedeemer.prototype.toJSON = function () { return this.toJson(); };
    TxRedeemer.prototype.toJson = function () {
        return {
            tag: txRedeemerTagToString(this.tag),
            index: this.index,
            execUnits: this.execUnits.toJson(),
            data: this.data.toJson(),
        };
    };
    return TxRedeemer;
}());
exports.TxRedeemer = TxRedeemer;
