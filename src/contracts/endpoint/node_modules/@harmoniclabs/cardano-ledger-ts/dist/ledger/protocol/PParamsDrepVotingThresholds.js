"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryGetPParamsDrepVotingThresholdsFromCborObj = exports.drepVotingThresholdsToCborObj = exports.isPParamsDrepVotingThresholds = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var Rational_1 = require("./Rational.js");
var cbor_1 = require("@harmoniclabs/cbor");
function isPParamsDrepVotingThresholds(stuff) {
    return (0, obj_utils_1.isObject)(stuff) && ((0, Rational_1.isRational)(stuff.motionNoConfidence) &&
        (0, Rational_1.isRational)(stuff.committeeNormal) &&
        (0, Rational_1.isRational)(stuff.committeeNoConfidence) &&
        (0, Rational_1.isRational)(stuff.updateConstitution) &&
        (0, Rational_1.isRational)(stuff.hardForkInitiation) &&
        (0, Rational_1.isRational)(stuff.ppNetworkGroup) &&
        (0, Rational_1.isRational)(stuff.ppEconomicGroup) &&
        (0, Rational_1.isRational)(stuff.ppTechnicalGroup) &&
        (0, Rational_1.isRational)(stuff.ppGovGroup) &&
        (0, Rational_1.isRational)(stuff.treasuryWithdrawal));
}
exports.isPParamsDrepVotingThresholds = isPParamsDrepVotingThresholds;
function drepVotingThresholdsToCborObj(drepVotingThresholds) {
    return new cbor_1.CborArray([
        (0, Rational_1.cborFromRational)(drepVotingThresholds.motionNoConfidence),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.committeeNormal),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.committeeNoConfidence),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.updateConstitution),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.hardForkInitiation),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.ppNetworkGroup),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.ppEconomicGroup),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.ppTechnicalGroup),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.ppGovGroup),
        (0, Rational_1.cborFromRational)(drepVotingThresholds.treasuryWithdrawal),
    ]);
}
exports.drepVotingThresholdsToCborObj = drepVotingThresholdsToCborObj;
function tryGetPParamsDrepVotingThresholdsFromCborObj(cbor) {
    if (!(cbor instanceof cbor_1.CborArray &&
        cbor.array.length >= 10 &&
        cbor.array.every(Rational_1.canBeCborPostiveRational)))
        return undefined;
    var _a = __read(cbor.array
        .map(function (thing) {
        var _a = __read(thing.data.array, 2), num = _a[0], den = _a[1];
        return new cbor_1.CborPositiveRational(num.num, den.num);
    }), 10), motionNoConfidence = _a[0], committeeNormal = _a[1], committeeNoConfidence = _a[2], updateConstitution = _a[3], hardForkInitiation = _a[4], ppNetworkGroup = _a[5], ppEconomicGroup = _a[6], ppTechnicalGroup = _a[7], ppGovGroup = _a[8], treasuryWithdrawal = _a[9];
    return {
        motionNoConfidence: motionNoConfidence,
        committeeNormal: committeeNormal,
        committeeNoConfidence: committeeNoConfidence,
        updateConstitution: updateConstitution,
        hardForkInitiation: hardForkInitiation,
        ppNetworkGroup: ppNetworkGroup,
        ppEconomicGroup: ppEconomicGroup,
        ppTechnicalGroup: ppTechnicalGroup,
        ppGovGroup: ppGovGroup,
        treasuryWithdrawal: treasuryWithdrawal
    };
}
exports.tryGetPParamsDrepVotingThresholdsFromCborObj = tryGetPParamsDrepVotingThresholdsFromCborObj;
