import type { Epoch } from "../Epoch.js";
import type { Coin } from "../Coin.js";
import { CborPositiveRational, CborObj, CborMap } from "@harmoniclabs/cbor";
import { CanBeUInteger } from "../../utils/ints.js";
import { CostModels } from "@harmoniclabs/cardano-costmodels-ts";
import { ExBudget, ExBudgetJson } from "@harmoniclabs/plutus-machine";
import { Rational } from "./Rational.js";
import { PParamsPoolVotingThresholds } from "./PParamsPoolVotingThresholds.js";
import { PParamsDrepVotingThresholds } from "./PParamsDrepVotingThresholds.js";
import { IProtocolVerision } from "./protocolVersion.js";
import { Data } from "@harmoniclabs/plutus-data";
export interface ProtocolParameters {
    txFeePerByte: CanBeUInteger;
    txFeeFixed: CanBeUInteger;
    maxBlockBodySize: CanBeUInteger;
    maxTxSize: CanBeUInteger;
    maxBlockHeaderSize: CanBeUInteger;
    stakeAddressDeposit: Coin;
    stakePoolDeposit: Coin;
    poolRetireMaxEpoch: Epoch;
    stakePoolTargetNum: CanBeUInteger;
    poolPledgeInfluence: Rational;
    monetaryExpansion: Rational;
    treasuryCut: Rational;
    /** @deprecated protocolVersion removed in conway */
    protocolVersion?: IProtocolVerision;
    minPoolCost: Coin;
    utxoCostPerByte: Coin;
    costModels: CostModels;
    executionUnitPrices: [
        mem_price: CborPositiveRational,
        step_price: CborPositiveRational
    ] | {
        priceMemory: number;
        priceSteps: number;
    };
    maxTxExecutionUnits: ExBudget | ExBudgetJson;
    maxBlockExecutionUnits: ExBudget | ExBudgetJson;
    maxValueSize: CanBeUInteger;
    collateralPercentage: CanBeUInteger;
    maxCollateralInputs: CanBeUInteger;
    poolVotingThresholds: PParamsPoolVotingThresholds;
    drepVotingThresholds: PParamsDrepVotingThresholds;
    minCommitteSize: CanBeUInteger;
    committeeTermLimit: Epoch;
    governanceActionValidityPeriod: Epoch;
    governanceActionDeposit: Epoch;
    drepDeposit: Coin;
    drepActivityPeriod: Epoch;
    minfeeRefScriptCostPerByte: Rational;
}
export declare function isProtocolParameters(something: any): something is ProtocolParameters;
export declare function isPartialProtocolParameters(something: object): something is Partial<ProtocolParameters>;
export declare function partialProtocolParametersToCborObj(pps: Partial<ProtocolParameters>): CborMap;
export declare function partialProtocolParametersToData(pps: Partial<ProtocolParameters>): Data;
export declare function partialProtocolParametersFromCborObj(cObj: CborObj): Partial<ProtocolParameters>;
export declare const defaultProtocolParameters: ProtocolParameters;
export declare function partialProtocolParamsToJson(pp: Partial<ProtocolParameters>): {
    poolPledgeInfluence: number | undefined;
    monetaryExpansion: number | undefined;
    treasuryCut: number | undefined;
    costModels: {
        PlutusScriptV1: {};
        PlutusScriptV2: {};
        PlutusScriptV3: {};
    } | undefined;
    executionUnitPrices: {
        priceMemory: number;
        priceSteps: number;
    } | undefined;
    maxTxExecutionUnits: ExBudgetJson | {
        steps: string;
        memory: string;
    } | undefined;
    maxBlockExecutionUnits: ExBudgetJson | {
        steps: string;
        memory: string;
    } | undefined;
    txFeePerByte?: CanBeUInteger | undefined;
    txFeeFixed?: CanBeUInteger | undefined;
    maxBlockBodySize?: CanBeUInteger | undefined;
    maxTxSize?: CanBeUInteger | undefined;
    maxBlockHeaderSize?: CanBeUInteger | undefined;
    stakeAddressDeposit?: CanBeUInteger | undefined;
    stakePoolDeposit?: CanBeUInteger | undefined;
    poolRetireMaxEpoch?: CanBeUInteger | undefined;
    stakePoolTargetNum?: CanBeUInteger | undefined;
    protocolVersion?: IProtocolVerision | undefined;
    minPoolCost?: CanBeUInteger | undefined;
    utxoCostPerByte?: CanBeUInteger | undefined;
    maxValueSize?: CanBeUInteger | undefined;
    collateralPercentage?: CanBeUInteger | undefined;
    maxCollateralInputs?: CanBeUInteger | undefined;
    poolVotingThresholds?: PParamsPoolVotingThresholds | undefined;
    drepVotingThresholds?: PParamsDrepVotingThresholds | undefined;
    minCommitteSize?: CanBeUInteger | undefined;
    committeeTermLimit?: CanBeUInteger | undefined;
    governanceActionValidityPeriod?: CanBeUInteger | undefined;
    governanceActionDeposit?: CanBeUInteger | undefined;
    drepDeposit?: CanBeUInteger | undefined;
    drepActivityPeriod?: CanBeUInteger | undefined;
    minfeeRefScriptCostPerByte?: Rational | undefined;
};
