"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartialBuiltin = void 0;
var uplc_1 = require("@harmoniclabs/uplc");
var PartialBuiltin = /** @class */ (function () {
    function PartialBuiltin(tag, args) {
        if (args === void 0) { args = []; }
        this._tag = tag;
        this._args = args;
        this._nRequiredArgs = PartialBuiltin.getNRequiredArgsFor(tag);
    }
    Object.defineProperty(PartialBuiltin.prototype, "tag", {
        get: function () { return this._tag; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PartialBuiltin.prototype, "args", {
        get: function () { return this._args; },
        enumerable: false,
        configurable: true
    });
    PartialBuiltin.prototype.clone = function () {
        return new PartialBuiltin(this._tag, this._args.map(function (arg) { return arg.clone(); }));
    };
    Object.defineProperty(PartialBuiltin.prototype, "nMissingArgs", {
        get: function () {
            return this._nRequiredArgs - this._args.length;
        },
        enumerable: false,
        configurable: true
    });
    PartialBuiltin.prototype.apply = function (arg) {
        this._args.push(arg);
    };
    /**
     * @todo
     */
    PartialBuiltin.getNRequiredArgsFor = function (tag) {
        switch (tag) {
            case uplc_1.UPLCBuiltinTag.addInteger: return 2;
            case uplc_1.UPLCBuiltinTag.subtractInteger: return 2;
            case uplc_1.UPLCBuiltinTag.multiplyInteger: return 2;
            case uplc_1.UPLCBuiltinTag.divideInteger: return 2;
            case uplc_1.UPLCBuiltinTag.quotientInteger: return 2;
            case uplc_1.UPLCBuiltinTag.remainderInteger: return 2;
            case uplc_1.UPLCBuiltinTag.modInteger: return 2;
            case uplc_1.UPLCBuiltinTag.equalsInteger: return 2;
            case uplc_1.UPLCBuiltinTag.lessThanInteger: return 2;
            case uplc_1.UPLCBuiltinTag.lessThanEqualInteger: return 2;
            case uplc_1.UPLCBuiltinTag.appendByteString: return 2;
            case uplc_1.UPLCBuiltinTag.consByteString: return 2;
            case uplc_1.UPLCBuiltinTag.sliceByteString: return 3;
            case uplc_1.UPLCBuiltinTag.lengthOfByteString: return 1;
            case uplc_1.UPLCBuiltinTag.indexByteString: return 2;
            case uplc_1.UPLCBuiltinTag.equalsByteString: return 2;
            case uplc_1.UPLCBuiltinTag.lessThanByteString: return 2;
            case uplc_1.UPLCBuiltinTag.lessThanEqualsByteString: return 2;
            case uplc_1.UPLCBuiltinTag.sha2_256: return 1;
            case uplc_1.UPLCBuiltinTag.sha3_256: return 1;
            case uplc_1.UPLCBuiltinTag.blake2b_256: return 1;
            case uplc_1.UPLCBuiltinTag.verifyEd25519Signature: return 3;
            case uplc_1.UPLCBuiltinTag.appendString: return 2;
            case uplc_1.UPLCBuiltinTag.equalsString: return 2;
            case uplc_1.UPLCBuiltinTag.encodeUtf8: return 1;
            case uplc_1.UPLCBuiltinTag.decodeUtf8: return 1;
            case uplc_1.UPLCBuiltinTag.ifThenElse: return 3;
            case uplc_1.UPLCBuiltinTag.chooseUnit: return 2;
            case uplc_1.UPLCBuiltinTag.trace: return 2;
            case uplc_1.UPLCBuiltinTag.fstPair: return 1;
            case uplc_1.UPLCBuiltinTag.sndPair: return 1;
            case uplc_1.UPLCBuiltinTag.chooseList: return 3;
            case uplc_1.UPLCBuiltinTag.mkCons: return 2;
            case uplc_1.UPLCBuiltinTag.headList: return 1;
            case uplc_1.UPLCBuiltinTag.tailList: return 1;
            case uplc_1.UPLCBuiltinTag.nullList: return 1;
            case uplc_1.UPLCBuiltinTag.chooseData: return 6;
            case uplc_1.UPLCBuiltinTag.constrData: return 2;
            case uplc_1.UPLCBuiltinTag.mapData: return 1;
            case uplc_1.UPLCBuiltinTag.listData: return 1;
            case uplc_1.UPLCBuiltinTag.iData: return 1;
            case uplc_1.UPLCBuiltinTag.bData: return 1;
            case uplc_1.UPLCBuiltinTag.unConstrData: return 1;
            case uplc_1.UPLCBuiltinTag.unMapData: return 1;
            case uplc_1.UPLCBuiltinTag.unListData: return 1;
            case uplc_1.UPLCBuiltinTag.unIData: return 1;
            case uplc_1.UPLCBuiltinTag.unBData: return 1;
            case uplc_1.UPLCBuiltinTag.equalsData: return 2;
            case uplc_1.UPLCBuiltinTag.mkPairData: return 2;
            case uplc_1.UPLCBuiltinTag.mkNilData: return 1;
            case uplc_1.UPLCBuiltinTag.mkNilPairData: return 1;
            case uplc_1.UPLCBuiltinTag.serialiseData: return 1;
            case uplc_1.UPLCBuiltinTag.verifyEcdsaSecp256k1Signature: return 3;
            case uplc_1.UPLCBuiltinTag.verifySchnorrSecp256k1Signature: return 3;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_add: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_neg: return 1;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_scalarMul: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_equal: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_hashToGroup: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_compress: return 1;
            case uplc_1.UPLCBuiltinTag.bls12_381_G1_uncompress: return 1;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_add: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_neg: return 1;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_scalarMul: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_equal: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_hashToGroup: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_compress: return 1;
            case uplc_1.UPLCBuiltinTag.bls12_381_G2_uncompress: return 1;
            case uplc_1.UPLCBuiltinTag.bls12_381_millerLoop: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_mulMlResult: return 2;
            case uplc_1.UPLCBuiltinTag.bls12_381_finalVerify: return 2;
            case uplc_1.UPLCBuiltinTag.keccak_256: return 1;
            case uplc_1.UPLCBuiltinTag.blake2b_224: return 1;
            case uplc_1.UPLCBuiltinTag.integerToByteString: return 3;
            case uplc_1.UPLCBuiltinTag.byteStringToInteger: return 2;
            // plomin
            case uplc_1.UPLCBuiltinTag.andByteString: return 3;
            case uplc_1.UPLCBuiltinTag.orByteString: return 3;
            case uplc_1.UPLCBuiltinTag.xorByteString: return 3;
            case uplc_1.UPLCBuiltinTag.complementByteString: return 1;
            case uplc_1.UPLCBuiltinTag.readBit: return 2;
            case uplc_1.UPLCBuiltinTag.writeBits: return 3;
            case uplc_1.UPLCBuiltinTag.replicateByte: return 2;
            case uplc_1.UPLCBuiltinTag.shiftByteString: return 2;
            case uplc_1.UPLCBuiltinTag.rotateByteString: return 2;
            case uplc_1.UPLCBuiltinTag.countSetBits: return 1;
            case uplc_1.UPLCBuiltinTag.findFirstSetBit: return 1;
            case uplc_1.UPLCBuiltinTag.ripemd_160: return 1;
            default:
                throw new Error("unrecognized builtin: " + tag);
        }
    };
    return PartialBuiltin;
}());
exports.PartialBuiltin = PartialBuiltin;
