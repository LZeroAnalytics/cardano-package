"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCostModelV1 = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var isArrayish_1 = require("../utils/isArrayish.js");
var costModelV1Keys_1 = require("./costModelV1Keys.js");
var defaultV1Costs_1 = require("./defaultV1Costs.js");
var N_COST_MODEL_PLUTUS_V1_1 = require("./N_COST_MODEL_PLUTUS_V1.js");
function toCostModelV1(v1) {
    if ((0, isArrayish_1.isArrayish)(v1))
        v1 = (0, isArrayish_1.forceArrayish)(v1);
    // already a CostModelPlutusV1 object
    if (!Array.isArray(v1))
        return __assign(__assign({}, defaultV1Costs_1.defaultV1Costs), v1);
    var result = __assign({}, defaultV1Costs_1.defaultV1Costs);
    if (v1.length < N_COST_MODEL_PLUTUS_V1_1.N_COST_MODEL_PLUTUS_V1)
        throw new Error("impossible to convert cost model v1 array to object; not enough arguments; arguments found in total: " + v1.length.toString());
    for (var i = 0; i < costModelV1Keys_1.costModelV1Keys.length; i++) {
        (0, obj_utils_1.defineReadOnlyProperty)(result, costModelV1Keys_1.costModelV1Keys[i], BigInt(v1[i]));
    }
    return result;
}
exports.toCostModelV1 = toCostModelV1;
