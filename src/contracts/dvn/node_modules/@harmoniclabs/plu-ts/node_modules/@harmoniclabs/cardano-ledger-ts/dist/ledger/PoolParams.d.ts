import { Coin } from "./Coin.js";
import { PubKeyHash } from "../credentials/PubKeyHash.js";
import { Hash32 } from "../hashes/Hash32/Hash32.js";
import { PoolKeyHash } from "../hashes/Hash28/PoolKeyHash.js";
import { VRFKeyHash } from "../hashes/Hash32/VRFKeyHash.js";
import { CborPositiveRational, CborObj } from "@harmoniclabs/cbor";
import { Hash28 } from "../hashes/index.js";
import { PoolRelay } from "./PoolRelay.js";
export interface IPoolParams {
    operator: PoolKeyHash;
    vrfKeyHash: VRFKeyHash;
    pledge: Coin;
    cost: Coin;
    margin: CborPositiveRational;
    rewardAccount: Hash28;
    owners: PubKeyHash[];
    relays: PoolRelay[];
    metadata?: [poolMetadataUrl: string, hash: Hash32];
}
export declare class PoolParams implements IPoolParams {
    readonly operator: PoolKeyHash;
    readonly vrfKeyHash: VRFKeyHash;
    readonly pledge: bigint;
    readonly cost: bigint;
    readonly margin: CborPositiveRational;
    readonly rewardAccount: Hash28;
    readonly owners: PubKeyHash[];
    readonly relays: PoolRelay[];
    readonly metadata?: [poolMetadataUrl: string, hash: Hash32];
    constructor(params: IPoolParams);
    toCborObjArray(): CborObj[];
    static fromCborObjArray([_operator, _vrfKeyHash, _pledge, _cost, _margin, _rewAccount, _owners, _relays, _metadata]: CborObj[]): PoolParams;
    toJson(): {
        operator: string;
        vrfKeyHash: string;
        pledge: string;
        cost: string;
        margin: number;
        rewardAccount: string;
        owners: string[];
        relays: ({
            type: string;
            port: number | undefined;
            ipv4: string | undefined;
            ipv6: string | undefined;
            dnsName?: undefined;
        } | {
            type: string;
            port: number | undefined;
            dnsName: string;
            ipv4?: undefined;
            ipv6?: undefined;
        } | {
            type: string;
            dnsName: string;
            port?: undefined;
            ipv4?: undefined;
            ipv6?: undefined;
        })[];
        metadata: {
            poolMetadataUrl: string;
            hash: string;
        } | undefined;
    };
}
