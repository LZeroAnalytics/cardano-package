export declare const unitDatumHash: import("../pluts/index.js").Term<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>> & import("../pluts/index.js").Term<import("../pluts/index.js").PByteString> & {
    readonly length: import("../pluts/index.js").TermInt;
    readonly utf8Decoded: import("../pluts/index.js").TermStr;
    readonly pconcat: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PByteString, import("../pluts/index.js").PByteString>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
    };
    readonly concat: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").TermBS;
    readonly pprepend: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PByteString>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
    };
    readonly prepend: (byte: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").TermBS;
    readonly psubByteString: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PByteString>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PByteString>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
        };
    };
    readonly subByteString: (fromInclusive: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>, ofLength: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").TermBS;
    readonly pslice: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PByteString>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PByteString>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
        };
    };
    readonly slice: (fromInclusive: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>, toExclusive: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").TermBS;
    readonly pat: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
    readonly at: (index: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").TermInt;
    readonly peq: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PByteString, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly eq: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").TermBool;
    readonly plt: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PByteString, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly lt: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").TermBool;
    readonly pltEq: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PByteString, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly ltEq: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").TermBool;
    readonly pgt: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PByteString, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly gt: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").TermBool;
    readonly pgtEq: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PByteString, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly gtEq: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PByteString>) => import("../pluts/index.js").TermBool;
} & import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").LiftMethods<import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").FilterMethodsByInput<import("../pluts/index.js").Methods, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, any>>> & import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").MethodsAsTerms<import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").FilterMethodsByInput<import("../pluts/index.js").Methods, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, any>>>;
export declare const emptyValue: import("../pluts/index.js").Term<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, {
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>> & import("../pluts/index.js").Term<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>> & {
    readonly head: import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly tail: import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly length: import("../pluts/index.js").TermInt;
    readonly reversed: import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pat: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>;
    };
    readonly at: (index: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pfind: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PMaybeT<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PMaybeT<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>;
    };
    readonly find: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PMaybeT<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>;
    readonly pfilter: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>;
    };
    readonly filter: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pprepend: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>;
    };
    readonly prepend: (elem: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>) => import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pmap: <ResultT extends import("../pluts/index.js").TermType>(resultT: ResultT) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").ToPType<ResultT>>, import("../pluts/index.js").PList<import("../pluts/index.js").ToPType<ResultT>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").ToPType<ResultT>>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").ToPType<ResultT>>>;
    };
    readonly map: <PResultElemT extends import("../pluts/index.js").PType>(f: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, PResultElemT>>) => import("../pluts/index.js").TermList<PResultElemT>;
    readonly pevery: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly every: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").TermBool;
    readonly psome: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly some: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").TermBool;
    readonly pincludes: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly includes: (elem: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>) => import("../pluts/index.js").TermBool;
    readonly peq: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly eq: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>) => import("../pluts/index.js").TermBool;
} & import("../pluts/index.js").Term<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>> & import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").LiftMethods<import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").FilterMethodsByInput<{
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}, import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, any>>> & import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").MethodsAsTerms<import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").FilterMethodsByInput<{
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}, import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, any>>>;
export declare const emptyValueAsData: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, {
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>;
export declare const validatorSpendingUtxo: import("../pluts/index.js").TermStruct<{
    PTxOutRef: {
        id: import("../pluts/index.js").StructT<{
            PTxId: {
                txId: [import("../pluts/index.js").PrimType.BS];
            };
        }, import("../pluts/index.js").Methods>;
        index: [import("../pluts/index.js").PrimType.Int];
    };
}, import("../pluts/index.js").Methods>;
export declare const validatorSpendingUtxoAsData: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PStruct<{
    PTxOutRef: {
        id: import("../pluts/index.js").StructT<{
            PTxId: {
                txId: [import("../pluts/index.js").PrimType.BS];
            };
        }, import("../pluts/index.js").Methods>;
        index: [import("../pluts/index.js").PrimType.Int];
    };
}, import("../pluts/index.js").Methods>>>;
export declare const beef32: import("../pluts/index.js").Term<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, {
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>> & import("../pluts/index.js").Term<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>> & {
    readonly head: import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly tail: import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly length: import("../pluts/index.js").TermInt;
    readonly reversed: import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pat: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PInt, import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>;
    };
    readonly at: (index: import("../pluts/index.js").PappArg<import("../pluts/index.js").PInt>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pfind: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PMaybeT<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PMaybeT<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>;
    };
    readonly find: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PMaybeT<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>;
    readonly pfilter: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>;
    };
    readonly filter: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pprepend: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>;
    };
    readonly prepend: (elem: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>) => import("../pluts/index.js").TermList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>;
    readonly pmap: <ResultT extends import("../pluts/index.js").TermType>(resultT: ResultT) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").ToPType<ResultT>>, import("../pluts/index.js").PList<import("../pluts/index.js").ToPType<ResultT>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").ToPType<ResultT>>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").ToPType<ResultT>>>;
    };
    readonly map: <PResultElemT extends import("../pluts/index.js").PType>(f: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, PResultElemT>>) => import("../pluts/index.js").TermList<PResultElemT>;
    readonly pevery: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly every: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").TermBool;
    readonly psome: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly some: (predicate: import("../pluts/index.js").PappArg<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>>) => import("../pluts/index.js").TermBool;
    readonly pincludes: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly includes: (elem: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>) => import("../pluts/index.js").TermBool;
    readonly peq: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, import("../pluts/index.js").PBool>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PBool>;
    };
    readonly eq: (other: import("../pluts/index.js").PappArg<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>>) => import("../pluts/index.js").TermBool;
} & import("../pluts/index.js").Term<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>> & import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").LiftMethods<import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").FilterMethodsByInput<{
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}, import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, any>>> & import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").MethodsAsTerms<import("../pluts/lib/std/UtilityTerms/userMethods/methodsTypes.js").FilterMethodsByInput<{
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}, import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, any>>>;
export declare const beef32AsData: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>, {
    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
    };
    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>;
    };
}>>, {
    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        };
    };
    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
        };
    }>>>, {
        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
        };
        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../pluts/index.js").PInt>> & {
        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }>>>, {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
    };
}>>>;
export declare const datums: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PData>>>>;
export declare const dCertificates: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PStruct<{
    KeyRegistration: {
        stakeKey: import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
    };
    KeyDeRegistration: {
        stakeKey: import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
    };
    KeyDelegation: {
        delegator: import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
        poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
    };
    PoolRegistration: {
        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
        poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
    };
    PoolRetire: {
        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
        epoch: [import("../pluts/index.js").PrimType.Int];
    };
    Genesis: {};
    MoveInstantRewards: {};
}, import("../pluts/index.js").Methods>>>>;
export declare const txId: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PStruct<{
    PTxId: {
        txId: [import("../pluts/index.js").PrimType.BS];
    };
}, import("../pluts/index.js").Methods>>>;
export declare const interval: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PStruct<{
    PInterval: {
        from: import("../pluts/index.js").StructT<{
            PLowerBound: {
                bound: import("../pluts/index.js").StructT<{
                    PNegInf: {};
                    PFinite: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                    };
                    PPosInf: {};
                }, import("../pluts/index.js").Methods>;
                inclusive: [import("../pluts/index.js").PrimType.Bool];
            };
        }, import("../pluts/index.js").Methods>;
        to: import("../pluts/index.js").StructT<{
            PUpperBound: {
                bound: import("../pluts/index.js").StructT<{
                    PNegInf: {};
                    PFinite: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                    };
                    PPosInf: {};
                }, import("../pluts/index.js").Methods>;
                inclusive: [import("../pluts/index.js").PrimType.Bool];
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>;
export declare const signatories: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>>>;
export declare const withdrawals: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PPair<import("../pluts/index.js").PStruct<{
    PStakingHash: {
        _0: import("../pluts/index.js").StructT<{
            PPubKeyCredential: {
                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PScriptCredential: {
                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
        }, {
            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                PPubKeyCredential: {
                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                };
                PScriptCredential: {
                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                };
            }, {}>, import("../pluts/index.js").PByteString>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
            };
        }>;
    };
    PStakingPtr: {
        _0: [import("../pluts/index.js").PrimType.Int];
        _1: [import("../pluts/index.js").PrimType.Int];
        _2: [import("../pluts/index.js").PrimType.Int];
    };
}, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>>;
export declare const address: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PStruct<{
    PAddress: {
        credential: import("../pluts/index.js").StructT<{
            PPubKeyCredential: {
                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PScriptCredential: {
                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
        }, {
            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                PPubKeyCredential: {
                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                };
                PScriptCredential: {
                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                };
            }, {}>, import("../pluts/index.js").PByteString>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
            };
        }>;
        stakingCredential: import("../pluts/index.js").StructT<{
            Just: {
                val: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            Nothing: {};
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>;
export declare const inputs: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PStruct<{
    PTxInInfo: {
        utxoRef: import("../pluts/index.js").StructT<{
            PTxOutRef: {
                id: import("../pluts/index.js").StructT<{
                    PTxId: {
                        txId: [import("../pluts/index.js").PrimType.BS];
                    };
                }, import("../pluts/index.js").Methods>;
                index: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
        resolved: import("../pluts/index.js").StructT<{
            PTxOut: {
                address: import("../pluts/index.js").StructT<{
                    PAddress: {
                        credential: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                        stakingCredential: import("../pluts/index.js").StructT<{
                            Just: {
                                val: import("../pluts/index.js").StructT<{
                                    PStakingHash: {
                                        _0: import("../pluts/index.js").StructT<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {
                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                PPubKeyCredential: {
                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                                PScriptCredential: {
                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                            };
                                        }>;
                                    };
                                    PStakingPtr: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                        _1: [import("../pluts/index.js").PrimType.Int];
                                        _2: [import("../pluts/index.js").PrimType.Int];
                                    };
                                }, import("../pluts/index.js").Methods>;
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
                value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                datumHash: import("../pluts/index.js").StructT<{
                    Just: {
                        val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>>;
export declare const outputs: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PStruct<{
    PTxOut: {
        address: import("../pluts/index.js").StructT<{
            PAddress: {
                credential: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
                stakingCredential: import("../pluts/index.js").StructT<{
                    Just: {
                        val: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        datumHash: import("../pluts/index.js").StructT<{
            Just: {
                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            Nothing: {};
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>>;
export declare const txInfo_v1: import("../pluts/index.js").TermStruct<{
    PTxInfo: {
        inputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            PTxInInfo: {
                utxoRef: import("../pluts/index.js").StructT<{
                    PTxOutRef: {
                        id: import("../pluts/index.js").StructT<{
                            PTxId: {
                                txId: [import("../pluts/index.js").PrimType.BS];
                            };
                        }, import("../pluts/index.js").Methods>;
                        index: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                resolved: import("../pluts/index.js").StructT<{
                    PTxOut: {
                        address: import("../pluts/index.js").StructT<{
                            PAddress: {
                                credential: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                                stakingCredential: import("../pluts/index.js").StructT<{
                                    Just: {
                                        val: import("../pluts/index.js").StructT<{
                                            PStakingHash: {
                                                _0: import("../pluts/index.js").StructT<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {
                                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                        PPubKeyCredential: {
                                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                        PScriptCredential: {
                                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                            PPubKeyCredential: {
                                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                            PScriptCredential: {
                                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                                    };
                                                }>;
                                            };
                                            PStakingPtr: {
                                                _0: [import("../pluts/index.js").PrimType.Int];
                                                _1: [import("../pluts/index.js").PrimType.Int];
                                                _2: [import("../pluts/index.js").PrimType.Int];
                                            };
                                        }, import("../pluts/index.js").Methods>;
                                    };
                                    Nothing: {};
                                }, import("../pluts/index.js").Methods>;
                            };
                        }, import("../pluts/index.js").Methods>;
                        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }]]], {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }]], {
                            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                };
                            };
                            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }];
                        datumHash: import("../pluts/index.js").StructT<{
                            Just: {
                                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>];
        outputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            PTxOut: {
                address: import("../pluts/index.js").StructT<{
                    PAddress: {
                        credential: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                        stakingCredential: import("../pluts/index.js").StructT<{
                            Just: {
                                val: import("../pluts/index.js").StructT<{
                                    PStakingHash: {
                                        _0: import("../pluts/index.js").StructT<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {
                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                PPubKeyCredential: {
                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                                PScriptCredential: {
                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                            };
                                        }>;
                                    };
                                    PStakingPtr: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                        _1: [import("../pluts/index.js").PrimType.Int];
                                        _2: [import("../pluts/index.js").PrimType.Int];
                                    };
                                }, import("../pluts/index.js").Methods>;
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
                value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                datumHash: import("../pluts/index.js").StructT<{
                    Just: {
                        val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>];
        fee: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        mint: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        dCertificates: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            KeyRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDeRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDelegation: {
                delegator: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRegistration: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRetire: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                epoch: [import("../pluts/index.js").PrimType.Int];
            };
            Genesis: {};
            MoveInstantRewards: {};
        }, import("../pluts/index.js").Methods>];
        withdrawals: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>, [import("../pluts/index.js").PrimType.Int]]];
        interval: import("../pluts/index.js").StructT<{
            PInterval: {
                from: import("../pluts/index.js").StructT<{
                    PLowerBound: {
                        bound: import("../pluts/index.js").StructT<{
                            PNegInf: {};
                            PFinite: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                            };
                            PPosInf: {};
                        }, import("../pluts/index.js").Methods>;
                        inclusive: [import("../pluts/index.js").PrimType.Bool];
                    };
                }, import("../pluts/index.js").Methods>;
                to: import("../pluts/index.js").StructT<{
                    PUpperBound: {
                        bound: import("../pluts/index.js").StructT<{
                            PNegInf: {};
                            PFinite: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                            };
                            PPosInf: {};
                        }, import("../pluts/index.js").Methods>;
                        inclusive: [import("../pluts/index.js").PrimType.Bool];
                    };
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
        signatories: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods]];
        datums: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Data]]];
        id: import("../pluts/index.js").StructT<{
            PTxId: {
                txId: [import("../pluts/index.js").PrimType.BS];
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>;
export declare const _purp: import("../pluts/index.js").TermStruct<{
    Minting: {
        currencySym: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
    };
    Spending: {
        utxoRef: import("../pluts/index.js").StructT<{
            PTxOutRef: {
                id: import("../pluts/index.js").StructT<{
                    PTxId: {
                        txId: [import("../pluts/index.js").PrimType.BS];
                    };
                }, import("../pluts/index.js").Methods>;
                index: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
    };
    Rewarding: {
        stakeCredential: import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
    };
    Certifying: {
        dCert: import("../pluts/index.js").StructT<{
            KeyRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDeRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDelegation: {
                delegator: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRegistration: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRetire: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                epoch: [import("../pluts/index.js").PrimType.Int];
            };
            Genesis: {};
            MoveInstantRewards: {};
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>;
export declare const ctx: import("../pluts/index.js").TermStruct<{
    PScriptContext: {
        tx: import("../pluts/index.js").StructT<{
            PTxInfo: {
                inputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
                    PTxInInfo: {
                        utxoRef: import("../pluts/index.js").StructT<{
                            PTxOutRef: {
                                id: import("../pluts/index.js").StructT<{
                                    PTxId: {
                                        txId: [import("../pluts/index.js").PrimType.BS];
                                    };
                                }, import("../pluts/index.js").Methods>;
                                index: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                        resolved: import("../pluts/index.js").StructT<{
                            PTxOut: {
                                address: import("../pluts/index.js").StructT<{
                                    PAddress: {
                                        credential: import("../pluts/index.js").StructT<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {
                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                PPubKeyCredential: {
                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                                PScriptCredential: {
                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                            };
                                        }>;
                                        stakingCredential: import("../pluts/index.js").StructT<{
                                            Just: {
                                                val: import("../pluts/index.js").StructT<{
                                                    PStakingHash: {
                                                        _0: import("../pluts/index.js").StructT<{
                                                            PPubKeyCredential: {
                                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                            PScriptCredential: {
                                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                        }, {
                                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                                PPubKeyCredential: {
                                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                                };
                                                                PScriptCredential: {
                                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                                };
                                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                                    PPubKeyCredential: {
                                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                                    };
                                                                    PScriptCredential: {
                                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                                    };
                                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                                            };
                                                        }>;
                                                    };
                                                    PStakingPtr: {
                                                        _0: [import("../pluts/index.js").PrimType.Int];
                                                        _1: [import("../pluts/index.js").PrimType.Int];
                                                        _2: [import("../pluts/index.js").PrimType.Int];
                                                    };
                                                }, import("../pluts/index.js").Methods>;
                                            };
                                            Nothing: {};
                                        }, import("../pluts/index.js").Methods>;
                                    };
                                }, import("../pluts/index.js").Methods>;
                                value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }]]], {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }]], {
                                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, {
                                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>;
                                        };
                                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, {
                                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                    };
                                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                    };
                                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                    };
                                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                    };
                                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                    };
                                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                    };
                                                }>>>;
                                            };
                                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        };
                                    };
                                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, {
                                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>;
                                        };
                                    }>>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, {
                                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                    };
                                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                    };
                                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                };
                                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                };
                                            }>>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                    };
                                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                    };
                                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                                    };
                                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                                    };
                                                }>>>;
                                            };
                                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }];
                                datumHash: import("../pluts/index.js").StructT<{
                                    Just: {
                                        val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    Nothing: {};
                                }, import("../pluts/index.js").Methods>;
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>];
                outputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
                    PTxOut: {
                        address: import("../pluts/index.js").StructT<{
                            PAddress: {
                                credential: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                                stakingCredential: import("../pluts/index.js").StructT<{
                                    Just: {
                                        val: import("../pluts/index.js").StructT<{
                                            PStakingHash: {
                                                _0: import("../pluts/index.js").StructT<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {
                                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                        PPubKeyCredential: {
                                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                        PScriptCredential: {
                                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                            PPubKeyCredential: {
                                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                            PScriptCredential: {
                                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                                    };
                                                }>;
                                            };
                                            PStakingPtr: {
                                                _0: [import("../pluts/index.js").PrimType.Int];
                                                _1: [import("../pluts/index.js").PrimType.Int];
                                                _2: [import("../pluts/index.js").PrimType.Int];
                                            };
                                        }, import("../pluts/index.js").Methods>;
                                    };
                                    Nothing: {};
                                }, import("../pluts/index.js").Methods>;
                            };
                        }, import("../pluts/index.js").Methods>;
                        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }]]], {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }]], {
                            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                };
                            };
                            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }];
                        datumHash: import("../pluts/index.js").StructT<{
                            Just: {
                                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>];
                fee: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                mint: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                dCertificates: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
                    KeyRegistration: {
                        stakeKey: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    KeyDeRegistration: {
                        stakeKey: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    KeyDelegation: {
                        delegator: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                        poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PoolRegistration: {
                        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PoolRetire: {
                        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        epoch: [import("../pluts/index.js").PrimType.Int];
                    };
                    Genesis: {};
                    MoveInstantRewards: {};
                }, import("../pluts/index.js").Methods>];
                withdrawals: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>, [import("../pluts/index.js").PrimType.Int]]];
                interval: import("../pluts/index.js").StructT<{
                    PInterval: {
                        from: import("../pluts/index.js").StructT<{
                            PLowerBound: {
                                bound: import("../pluts/index.js").StructT<{
                                    PNegInf: {};
                                    PFinite: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                    };
                                    PPosInf: {};
                                }, import("../pluts/index.js").Methods>;
                                inclusive: [import("../pluts/index.js").PrimType.Bool];
                            };
                        }, import("../pluts/index.js").Methods>;
                        to: import("../pluts/index.js").StructT<{
                            PUpperBound: {
                                bound: import("../pluts/index.js").StructT<{
                                    PNegInf: {};
                                    PFinite: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                    };
                                    PPosInf: {};
                                }, import("../pluts/index.js").Methods>;
                                inclusive: [import("../pluts/index.js").PrimType.Bool];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
                signatories: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods]];
                datums: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Data]]];
                id: import("../pluts/index.js").StructT<{
                    PTxId: {
                        txId: [import("../pluts/index.js").PrimType.BS];
                    };
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
        purpose: import("../pluts/index.js").StructT<{
            Minting: {
                currencySym: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            Spending: {
                utxoRef: import("../pluts/index.js").StructT<{
                    PTxOutRef: {
                        id: import("../pluts/index.js").StructT<{
                            PTxId: {
                                txId: [import("../pluts/index.js").PrimType.BS];
                            };
                        }, import("../pluts/index.js").Methods>;
                        index: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            Rewarding: {
                stakeCredential: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            Certifying: {
                dCert: import("../pluts/index.js").StructT<{
                    KeyRegistration: {
                        stakeKey: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    KeyDeRegistration: {
                        stakeKey: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    KeyDelegation: {
                        delegator: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                        poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PoolRegistration: {
                        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PoolRetire: {
                        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        epoch: [import("../pluts/index.js").PrimType.Int];
                    };
                    Genesis: {};
                    MoveInstantRewards: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>;
export declare const v2_out: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PStruct<{
    PTxOut: {
        address: import("../pluts/index.js").StructT<{
            PAddress: {
                credential: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
                stakingCredential: import("../pluts/index.js").StructT<{
                    Just: {
                        val: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        datum: import("../pluts/index.js").StructT<{
            NoDatum: {};
            DatumHash: {
                datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            InlineDatum: {
                datum: [import("../pluts/index.js").PrimType.Data];
            };
        }, import("../pluts/index.js").Methods>;
        refScrpt: import("../pluts/index.js").StructT<{
            Just: {
                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            Nothing: {};
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>;
export declare const v2_inputs: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PStruct<{
    PTxInInfo: {
        utxoRef: import("../pluts/index.js").StructT<{
            PTxOutRef: {
                id: import("../pluts/index.js").StructT<{
                    PTxId: {
                        txId: [import("../pluts/index.js").PrimType.BS];
                    };
                }, import("../pluts/index.js").Methods>;
                index: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
        resolved: import("../pluts/index.js").StructT<{
            PTxOut: {
                address: import("../pluts/index.js").StructT<{
                    PAddress: {
                        credential: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                        stakingCredential: import("../pluts/index.js").StructT<{
                            Just: {
                                val: import("../pluts/index.js").StructT<{
                                    PStakingHash: {
                                        _0: import("../pluts/index.js").StructT<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {
                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                PPubKeyCredential: {
                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                                PScriptCredential: {
                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                            };
                                        }>;
                                    };
                                    PStakingPtr: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                        _1: [import("../pluts/index.js").PrimType.Int];
                                        _2: [import("../pluts/index.js").PrimType.Int];
                                    };
                                }, import("../pluts/index.js").Methods>;
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
                value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                datum: import("../pluts/index.js").StructT<{
                    NoDatum: {};
                    DatumHash: {
                        datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    InlineDatum: {
                        datum: [import("../pluts/index.js").PrimType.Data];
                    };
                }, import("../pluts/index.js").Methods>;
                refScrpt: import("../pluts/index.js").StructT<{
                    Just: {
                        val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>>;
export declare const empty_v2_outs: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PStruct<{
    PTxOut: {
        address: import("../pluts/index.js").StructT<{
            PAddress: {
                credential: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
                stakingCredential: import("../pluts/index.js").StructT<{
                    Just: {
                        val: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        datum: import("../pluts/index.js").StructT<{
            NoDatum: {};
            DatumHash: {
                datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            InlineDatum: {
                datum: [import("../pluts/index.js").PrimType.Data];
            };
        }, import("../pluts/index.js").Methods>;
        refScrpt: import("../pluts/index.js").StructT<{
            Just: {
                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            Nothing: {};
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>>;
export declare const empty_redeemers: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PPair<import("../pluts/index.js").PStruct<{
    Minting: {
        currencySym: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
    };
    Spending: {
        utxoRef: import("../pluts/index.js").StructT<{
            PTxOutRef: {
                id: import("../pluts/index.js").StructT<{
                    PTxId: {
                        txId: [import("../pluts/index.js").PrimType.BS];
                    };
                }, import("../pluts/index.js").Methods>;
                index: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
    };
    Rewarding: {
        stakeCredential: import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
    };
    Certifying: {
        dCert: import("../pluts/index.js").StructT<{
            KeyRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDeRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDelegation: {
                delegator: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRegistration: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRetire: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                epoch: [import("../pluts/index.js").PrimType.Int];
            };
            Genesis: {};
            MoveInstantRewards: {};
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>, import("../pluts/index.js").PData>>>>;
export declare const empty_refInputs: import("../pluts/index.js").Term<import("../pluts/index.js").PAsData<import("../pluts/index.js").PList<import("../pluts/index.js").PStruct<{
    PTxInInfo: {
        utxoRef: import("../pluts/index.js").StructT<{
            PTxOutRef: {
                id: import("../pluts/index.js").StructT<{
                    PTxId: {
                        txId: [import("../pluts/index.js").PrimType.BS];
                    };
                }, import("../pluts/index.js").Methods>;
                index: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>;
        resolved: import("../pluts/index.js").StructT<{
            PTxOut: {
                address: import("../pluts/index.js").StructT<{
                    PAddress: {
                        credential: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                        stakingCredential: import("../pluts/index.js").StructT<{
                            Just: {
                                val: import("../pluts/index.js").StructT<{
                                    PStakingHash: {
                                        _0: import("../pluts/index.js").StructT<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {
                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                PPubKeyCredential: {
                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                                PScriptCredential: {
                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                            };
                                        }>;
                                    };
                                    PStakingPtr: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                        _1: [import("../pluts/index.js").PrimType.Int];
                                        _2: [import("../pluts/index.js").PrimType.Int];
                                    };
                                }, import("../pluts/index.js").Methods>;
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
                value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                datum: import("../pluts/index.js").StructT<{
                    NoDatum: {};
                    DatumHash: {
                        datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    InlineDatum: {
                        datum: [import("../pluts/index.js").PrimType.Data];
                    };
                }, import("../pluts/index.js").Methods>;
                refScrpt: import("../pluts/index.js").StructT<{
                    Just: {
                        val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>>>;
export declare const tx_v2: import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PStruct<{
    PTxInfo: {
        inputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            PTxInInfo: {
                utxoRef: import("../pluts/index.js").StructT<{
                    PTxOutRef: {
                        id: import("../pluts/index.js").StructT<{
                            PTxId: {
                                txId: [import("../pluts/index.js").PrimType.BS];
                            };
                        }, import("../pluts/index.js").Methods>;
                        index: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                resolved: import("../pluts/index.js").StructT<{
                    PTxOut: {
                        address: import("../pluts/index.js").StructT<{
                            PAddress: {
                                credential: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                                stakingCredential: import("../pluts/index.js").StructT<{
                                    Just: {
                                        val: import("../pluts/index.js").StructT<{
                                            PStakingHash: {
                                                _0: import("../pluts/index.js").StructT<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {
                                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                        PPubKeyCredential: {
                                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                        PScriptCredential: {
                                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                            PPubKeyCredential: {
                                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                            PScriptCredential: {
                                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                                    };
                                                }>;
                                            };
                                            PStakingPtr: {
                                                _0: [import("../pluts/index.js").PrimType.Int];
                                                _1: [import("../pluts/index.js").PrimType.Int];
                                                _2: [import("../pluts/index.js").PrimType.Int];
                                            };
                                        }, import("../pluts/index.js").Methods>;
                                    };
                                    Nothing: {};
                                }, import("../pluts/index.js").Methods>;
                            };
                        }, import("../pluts/index.js").Methods>;
                        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }]]], {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }]], {
                            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                };
                            };
                            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }];
                        datum: import("../pluts/index.js").StructT<{
                            NoDatum: {};
                            DatumHash: {
                                datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            InlineDatum: {
                                datum: [import("../pluts/index.js").PrimType.Data];
                            };
                        }, import("../pluts/index.js").Methods>;
                        refScrpt: import("../pluts/index.js").StructT<{
                            Just: {
                                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>];
        refInputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            PTxInInfo: {
                utxoRef: import("../pluts/index.js").StructT<{
                    PTxOutRef: {
                        id: import("../pluts/index.js").StructT<{
                            PTxId: {
                                txId: [import("../pluts/index.js").PrimType.BS];
                            };
                        }, import("../pluts/index.js").Methods>;
                        index: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                resolved: import("../pluts/index.js").StructT<{
                    PTxOut: {
                        address: import("../pluts/index.js").StructT<{
                            PAddress: {
                                credential: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                                stakingCredential: import("../pluts/index.js").StructT<{
                                    Just: {
                                        val: import("../pluts/index.js").StructT<{
                                            PStakingHash: {
                                                _0: import("../pluts/index.js").StructT<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {
                                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                        PPubKeyCredential: {
                                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                        PScriptCredential: {
                                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                        };
                                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                            PPubKeyCredential: {
                                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                            PScriptCredential: {
                                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                            };
                                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                                    };
                                                }>;
                                            };
                                            PStakingPtr: {
                                                _0: [import("../pluts/index.js").PrimType.Int];
                                                _1: [import("../pluts/index.js").PrimType.Int];
                                                _2: [import("../pluts/index.js").PrimType.Int];
                                            };
                                        }, import("../pluts/index.js").Methods>;
                                    };
                                    Nothing: {};
                                }, import("../pluts/index.js").Methods>;
                            };
                        }, import("../pluts/index.js").Methods>;
                        value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }]]], {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }]], {
                            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                };
                            };
                            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, {
                                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>;
                                };
                            }>>, any>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, {
                                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                        };
                                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                        };
                                    }>>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                            };
                                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                            };
                                        }>>>;
                                    };
                                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }];
                        datum: import("../pluts/index.js").StructT<{
                            NoDatum: {};
                            DatumHash: {
                                datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            InlineDatum: {
                                datum: [import("../pluts/index.js").PrimType.Data];
                            };
                        }, import("../pluts/index.js").Methods>;
                        refScrpt: import("../pluts/index.js").StructT<{
                            Just: {
                                val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>];
        outputs: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            PTxOut: {
                address: import("../pluts/index.js").StructT<{
                    PAddress: {
                        credential: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                        stakingCredential: import("../pluts/index.js").StructT<{
                            Just: {
                                val: import("../pluts/index.js").StructT<{
                                    PStakingHash: {
                                        _0: import("../pluts/index.js").StructT<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {
                                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                                PPubKeyCredential: {
                                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                                PScriptCredential: {
                                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                };
                                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                                    PPubKeyCredential: {
                                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                    PScriptCredential: {
                                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                                    };
                                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                            };
                                        }>;
                                    };
                                    PStakingPtr: {
                                        _0: [import("../pluts/index.js").PrimType.Int];
                                        _1: [import("../pluts/index.js").PrimType.Int];
                                        _2: [import("../pluts/index.js").PrimType.Int];
                                    };
                                }, import("../pluts/index.js").Methods>;
                            };
                            Nothing: {};
                        }, import("../pluts/index.js").Methods>;
                    };
                }, import("../pluts/index.js").Methods>;
                value: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }]]], {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }]], {
                    amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                            $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        };
                    };
                    lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, {
                        policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>;
                        };
                    }>>, any>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, {
                            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                };
                                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                };
                            }>>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                                    };
                                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                                    };
                                }>>>;
                            };
                        }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }];
                datum: import("../pluts/index.js").StructT<{
                    NoDatum: {};
                    DatumHash: {
                        datumHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    InlineDatum: {
                        datum: [import("../pluts/index.js").PrimType.Data];
                    };
                }, import("../pluts/index.js").Methods>;
                refScrpt: import("../pluts/index.js").StructT<{
                    Just: {
                        val: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    Nothing: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>];
        fee: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        mint: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Int]], {
            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }]]], {
            policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
            };
            assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>;
            };
        }]], {
            amountOf: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>>> & {
                    $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                };
            };
            lovelaces: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                };
            }>>>, {
                policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                };
                assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>> & {
                    $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>;
                };
            }>>, any>, import("../pluts/index.js").PInt>> & {
                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                    tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                    };
                }>>>, {
                    policy: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                    };
                    assets: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>, any>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                        tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                        };
                        quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                            $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                        };
                    }>>>> & {
                        $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PList<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, {
                            tokenName: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>>;
                            };
                            quantity: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>, import("../pluts/index.js").PInt>> & {
                                $: (someInput: import("../pluts/index.js").PappArg<import("../pluts/index.js").PAlias<import("../pluts/index.js").PPair<import("../pluts/index.js").PAlias<import("../pluts/index.js").PByteString, import("../pluts/index.js").Methods>, import("../pluts/index.js").PInt>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
                            };
                        }>>>;
                    };
                }>>, any>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PInt>;
            };
        }];
        dCertificates: [import("../pluts/index.js").PrimType.List, import("../pluts/index.js").StructT<{
            KeyRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDeRegistration: {
                stakeKey: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            KeyDelegation: {
                delegator: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
                poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRegistration: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            PoolRetire: {
                poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                epoch: [import("../pluts/index.js").PrimType.Int];
            };
            Genesis: {};
            MoveInstantRewards: {};
        }, import("../pluts/index.js").Methods>];
        withdrawals: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, import("../pluts/index.js").StructT<{
            PStakingHash: {
                _0: import("../pluts/index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                }, {
                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        };
                    }, {}>, import("../pluts/index.js").PByteString>> & {
                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../pluts/index.js").PrimType.Int];
                _1: [import("../pluts/index.js").PrimType.Int];
                _2: [import("../pluts/index.js").PrimType.Int];
            };
        }, import("../pluts/index.js").Methods>, [import("../pluts/index.js").PrimType.Int]]];
        interval: import("../pluts/index.js").StructT<{
            PInterval: {
                from: import("../pluts/index.js").StructT<{
                    PLowerBound: {
                        bound: import("../pluts/index.js").StructT<{
                            PNegInf: {};
                            PFinite: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                            };
                            PPosInf: {};
                        }, import("../pluts/index.js").Methods>;
                        inclusive: [import("../pluts/index.js").PrimType.Bool];
                    };
                }, import("../pluts/index.js").Methods>;
                to: import("../pluts/index.js").StructT<{
                    PUpperBound: {
                        bound: import("../pluts/index.js").StructT<{
                            PNegInf: {};
                            PFinite: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                            };
                            PPosInf: {};
                        }, import("../pluts/index.js").Methods>;
                        inclusive: [import("../pluts/index.js").PrimType.Bool];
                    };
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>;
        signatories: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods]];
        redeemers: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, import("../pluts/index.js").StructT<{
            Minting: {
                currencySym: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
            };
            Spending: {
                utxoRef: import("../pluts/index.js").StructT<{
                    PTxOutRef: {
                        id: import("../pluts/index.js").StructT<{
                            PTxId: {
                                txId: [import("../pluts/index.js").PrimType.BS];
                            };
                        }, import("../pluts/index.js").Methods>;
                        index: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            Rewarding: {
                stakeCredential: import("../pluts/index.js").StructT<{
                    PStakingHash: {
                        _0: import("../pluts/index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                            };
                        }, {
                            hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                };
                            }, {}>, import("../pluts/index.js").PByteString>> & {
                                $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../pluts/index.js").PrimType.Int];
                        _1: [import("../pluts/index.js").PrimType.Int];
                        _2: [import("../pluts/index.js").PrimType.Int];
                    };
                }, import("../pluts/index.js").Methods>;
            };
            Certifying: {
                dCert: import("../pluts/index.js").StructT<{
                    KeyRegistration: {
                        stakeKey: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    KeyDeRegistration: {
                        stakeKey: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                    };
                    KeyDelegation: {
                        delegator: import("../pluts/index.js").StructT<{
                            PStakingHash: {
                                _0: import("../pluts/index.js").StructT<{
                                    PPubKeyCredential: {
                                        pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                    };
                                }, {
                                    hash: import("../pluts/index.js").Term<import("../pluts/index.js").PLam<import("../pluts/index.js").PStruct<{
                                        PPubKeyCredential: {
                                            pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                        PScriptCredential: {
                                            valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                        };
                                    }, {}>, import("../pluts/index.js").PByteString>> & {
                                        $: (input: import("../pluts/index.js").PappArg<import("../pluts/index.js").PStruct<{
                                            PPubKeyCredential: {
                                                pkh: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                            PScriptCredential: {
                                                valHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                                            };
                                        }, {}>>) => import("../pluts/index.js").UtilityTermOf<import("../pluts/index.js").PByteString>;
                                    };
                                }>;
                            };
                            PStakingPtr: {
                                _0: [import("../pluts/index.js").PrimType.Int];
                                _1: [import("../pluts/index.js").PrimType.Int];
                                _2: [import("../pluts/index.js").PrimType.Int];
                            };
                        }, import("../pluts/index.js").Methods>;
                        poolKeyHash: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PoolRegistration: {
                        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        poolVFR: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                    };
                    PoolRetire: {
                        poolId: [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods];
                        epoch: [import("../pluts/index.js").PrimType.Int];
                    };
                    Genesis: {};
                    MoveInstantRewards: {};
                }, import("../pluts/index.js").Methods>;
            };
        }, import("../pluts/index.js").Methods>, [import("../pluts/index.js").PrimType.Data]]];
        datums: [import("../pluts/index.js").PrimType.List, [import("../pluts/index.js").PrimType.Pair, [import("../pluts/index.js").PrimType.Alias, [import("../pluts/index.js").PrimType.BS], import("../pluts/index.js").Methods], [import("../pluts/index.js").PrimType.Data]]];
        id: import("../pluts/index.js").StructT<{
            PTxId: {
                txId: [import("../pluts/index.js").PrimType.BS];
            };
        }, import("../pluts/index.js").Methods>;
    };
}, import("../pluts/index.js").Methods>>;
