export declare const PScriptPurpose: import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
    Minting: {
        currencySym: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
    };
    Spending: {
        utxoRef: import("../../../../index.js").StructT<{
            PTxOutRef: {
                id: import("../../../../index.js").StructT<{
                    PTxId: {
                        txId: [import("../../../../index.js").PrimType.BS];
                    };
                }, import("../../../../index.js").Methods>;
                index: [import("../../../../index.js").PrimType.Int];
            };
        }, import("../../../../index.js").Methods>;
    };
    Rewarding: {
        stakeCredential: import("../../../../index.js").StructT<{
            PStakingHash: {
                _0: import("../../../../index.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                    };
                }, {
                    hash: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                        };
                    }, {}>, import("../../../../index.js").PByteString>> & {
                        $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                        }, {}>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../../../../index.js").PrimType.Int];
                _1: [import("../../../../index.js").PrimType.Int];
                _2: [import("../../../../index.js").PrimType.Int];
            };
        }, import("../../../../index.js").Methods>;
    };
    Certifying: {
        dCert: import("../../../../index.js").StructT<{
            KeyRegistration: {
                stakeKey: import("../../../../index.js").StructT<{
                    PStakingHash: {
                        _0: import("../../../../index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                        }, {
                            hash: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                };
                            }, {}>, import("../../../../index.js").PByteString>> & {
                                $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                    };
                                }, {}>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../../../../index.js").PrimType.Int];
                        _1: [import("../../../../index.js").PrimType.Int];
                        _2: [import("../../../../index.js").PrimType.Int];
                    };
                }, import("../../../../index.js").Methods>;
            };
            KeyDeRegistration: {
                stakeKey: import("../../../../index.js").StructT<{
                    PStakingHash: {
                        _0: import("../../../../index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                        }, {
                            hash: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                };
                            }, {}>, import("../../../../index.js").PByteString>> & {
                                $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                    };
                                }, {}>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../../../../index.js").PrimType.Int];
                        _1: [import("../../../../index.js").PrimType.Int];
                        _2: [import("../../../../index.js").PrimType.Int];
                    };
                }, import("../../../../index.js").Methods>;
            };
            KeyDelegation: {
                delegator: import("../../../../index.js").StructT<{
                    PStakingHash: {
                        _0: import("../../../../index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                            };
                        }, {
                            hash: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                };
                            }, {}>, import("../../../../index.js").PByteString>> & {
                                $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PStruct/pstruct.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                                    };
                                }, {}>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../../../../index.js").PrimType.Int];
                        _1: [import("../../../../index.js").PrimType.Int];
                        _2: [import("../../../../index.js").PrimType.Int];
                    };
                }, import("../../../../index.js").Methods>;
                poolKeyHash: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
            };
            PoolRegistration: {
                poolId: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                poolVFR: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
            };
            PoolRetire: {
                poolId: [import("../../../../index.js").PrimType.Alias, [import("../../../../index.js").PrimType.BS], import("../../../../index.js").Methods];
                epoch: [import("../../../../index.js").PrimType.Int];
            };
            Genesis: {};
            MoveInstantRewards: {};
        }, import("../../../../index.js").Methods>;
    };
}, import("../../../../index.js").Methods>;
