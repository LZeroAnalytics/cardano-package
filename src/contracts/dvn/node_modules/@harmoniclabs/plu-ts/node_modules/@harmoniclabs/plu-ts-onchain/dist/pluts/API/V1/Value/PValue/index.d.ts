export declare const PAssetsEntry: import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
    };
    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
    };
}>;
export declare const PValueEntry: import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
    };
    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
    };
}>>>, {
    policy: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
    };
    assets: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>, any>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>;
    };
}>;
export declare const PValue: import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
    };
    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
    };
}>>>, {
    policy: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
    };
    assets: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>, any>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>> & {
        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>;
    };
}>>, {
    amountOf: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>, {
        policy: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        assets: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>>>> & {
        $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, {
            policy: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                    };
                    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                    };
                }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            assets: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                    };
                    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                    };
                }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                    };
                    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>>> & {
            $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>) => import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>> & {
                $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        };
    };
    lovelaces: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
        tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
        };
    }>>>, {
        policy: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
        };
        assets: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, any>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>> & {
            $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>;
        };
    }>>, any>, import("../../../../index.js").PInt>> & {
        $: (input: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
            tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
            };
        }>>>, {
            policy: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                    };
                    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                    };
                }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
            };
            assets: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>, any>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                };
                quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                    $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                };
            }>>>> & {
                $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                    };
                    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                    };
                }>>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PList<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, {
                    tokenName: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>>;
                    };
                    quantity: import("../../../../index.js").Term<import("../../../../index.js").PLam<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>, import("../../../../index.js").PInt>> & {
                        $: (someInput: import("../../../../index.js").PappArg<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PPair<import("../../../../PTypes/PAlias/palias.js").PAlias<import("../../../../index.js").PByteString, import("../../../../type_system/index.js").Methods>, import("../../../../index.js").PInt>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
                    };
                }>>>;
            };
        }>>, any>>) => import("../../../../index.js").UtilityTermOf<import("../../../../index.js").PInt>;
    };
}>;
