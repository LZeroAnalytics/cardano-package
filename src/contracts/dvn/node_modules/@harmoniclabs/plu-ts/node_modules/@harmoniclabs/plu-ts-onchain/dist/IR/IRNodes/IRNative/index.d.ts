import { ToJson } from "@harmoniclabs/cardano-ledger-ts/dist/utils/ToJson";
import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { IHash } from "../../interfaces/IHash.js";
import { IIRParent } from "../../interfaces/IIRParent.js";
import { IRNativeTag } from "./IRNativeTag.js";
import { IRParentTerm } from "../../utils/isIRParentTerm.js";
import { BaseIRMetadata } from "../BaseIRMetadata.js";
export interface IRNativeMetadata extends BaseIRMetadata {
}
/**
 * `IRNative` âŠ‡ `Builtins` + `std::fn`
**/
export declare class IRNative implements Cloneable<IRNative>, IHash, IIRParent, ToJson {
    readonly tag: IRNativeTag;
    readonly hash: Uint8Array;
    markHashAsInvalid: () => void;
    readonly meta: IRNativeMetadata;
    parent: IRParentTerm | undefined;
    constructor(tag: IRNativeTag);
    static get tag(): Uint8Array;
    clone(): IRNative;
    toJson(): {
        type: string;
        native: string;
    };
    static get addInteger(): IRNative;
    static get subtractInteger(): IRNative;
    static get multiplyInteger(): IRNative;
    static get divideInteger(): IRNative;
    static get quotientInteger(): IRNative;
    static get remainderInteger(): IRNative;
    static get modInteger(): IRNative;
    static get equalsInteger(): IRNative;
    static get lessThanInteger(): IRNative;
    static get lessThanEqualInteger(): IRNative;
    static get appendByteString(): IRNative;
    static get consByteString(): IRNative;
    static get sliceByteString(): IRNative;
    static get lengthOfByteString(): IRNative;
    static get indexByteString(): IRNative;
    static get equalsByteString(): IRNative;
    static get lessThanByteString(): IRNative;
    static get lessThanEqualsByteString(): IRNative;
    static get sha2_256(): IRNative;
    static get sha3_256(): IRNative;
    static get blake2b_256(): IRNative;
    static get verifyEd25519Signature(): IRNative;
    static get appendString(): IRNative;
    static get equalsString(): IRNative;
    static get encodeUtf8(): IRNative;
    static get decodeUtf8(): IRNative;
    static get strictIfThenElse(): IRNative;
    static get chooseUnit(): IRNative;
    static get trace(): IRNative;
    static get fstPair(): IRNative;
    static get sndPair(): IRNative;
    static get strictChooseList(): IRNative;
    static get mkCons(): IRNative;
    static get headList(): IRNative;
    static get tailList(): IRNative;
    static get nullList(): IRNative;
    static get chooseData(): IRNative;
    static get constrData(): IRNative;
    static get mapData(): IRNative;
    static get listData(): IRNative;
    static get iData(): IRNative;
    static get bData(): IRNative;
    static get unConstrData(): IRNative;
    static get unMapData(): IRNative;
    static get unListData(): IRNative;
    static get unIData(): IRNative;
    static get unBData(): IRNative;
    static get equalsData(): IRNative;
    static get mkPairData(): IRNative;
    static get mkNilData(): IRNative;
    static get mkNilPairData(): IRNative;
    static get serialiseData(): IRNative;
    static get verifyEcdsaSecp256k1Signature(): IRNative;
    static get verifySchnorrSecp256k1Signature(): IRNative;
    static get z_comb(): IRNative;
    static get _matchList(): IRNative;
    static get _recursiveList(): IRNative;
    static get _dropList(): IRNative;
    static get _indexList(): IRNative;
    static get _foldr(): IRNative;
    static get _foldl(): IRNative;
    static get _mkFind(): IRNative;
    static get _length(): IRNative;
    static get _some(): IRNative;
    static get _every(): IRNative;
    static get _mkFilter(): IRNative;
    static get _id(): IRNative;
    static get _not(): IRNative;
    static get _strictAnd(): IRNative;
    static get _and(): IRNative;
    static get _strictOr(): IRNative;
    static get _or(): IRNative;
    static get _gtBS(): IRNative;
    static get _gtEqBS(): IRNative;
    static get _gtInt(): IRNative;
    static get _gtEqInt(): IRNative;
    static get _strToData(): IRNative;
    static get _pairDataToData(): IRNative;
    static get _strFromData(): IRNative;
    static get _pairDataFromData(): IRNative;
    static get _lazyChooseList(): IRNative;
    static get _lazyIfThenElse(): IRNative;
}
