export declare const PDCert: import("../../../PTypes/PStruct/pstruct.js").PStruct<{
    KeyRegistration: {
        stakeKey: import("../../../type_system/types.js").StructT<{
            PStakingHash: {
                _0: import("../../../type_system/types.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                    };
                }, {
                    hash: import("../../../index.js").Term<import("../../../index.js").PLam<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                        };
                    }, {}>, import("../../../index.js").PByteString>> & {
                        $: (input: import("../../../index.js").PappArg<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                            };
                        }, {}>>) => import("../../../index.js").UtilityTermOf<import("../../../index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../../../type_system/types.js").PrimType.Int];
                _1: [import("../../../type_system/types.js").PrimType.Int];
                _2: [import("../../../type_system/types.js").PrimType.Int];
            };
        }, import("../../../type_system/types.js").Methods>;
    };
    KeyDeRegistration: {
        stakeKey: import("../../../type_system/types.js").StructT<{
            PStakingHash: {
                _0: import("../../../type_system/types.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                    };
                }, {
                    hash: import("../../../index.js").Term<import("../../../index.js").PLam<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                        };
                    }, {}>, import("../../../index.js").PByteString>> & {
                        $: (input: import("../../../index.js").PappArg<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                            };
                        }, {}>>) => import("../../../index.js").UtilityTermOf<import("../../../index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../../../type_system/types.js").PrimType.Int];
                _1: [import("../../../type_system/types.js").PrimType.Int];
                _2: [import("../../../type_system/types.js").PrimType.Int];
            };
        }, import("../../../type_system/types.js").Methods>;
    };
    KeyDelegation: {
        delegator: import("../../../type_system/types.js").StructT<{
            PStakingHash: {
                _0: import("../../../type_system/types.js").StructT<{
                    PPubKeyCredential: {
                        pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                    };
                }, {
                    hash: import("../../../index.js").Term<import("../../../index.js").PLam<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                        PPubKeyCredential: {
                            pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                        };
                        PScriptCredential: {
                            valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                        };
                    }, {}>, import("../../../index.js").PByteString>> & {
                        $: (input: import("../../../index.js").PappArg<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                            PPubKeyCredential: {
                                pkh: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
                            };
                        }, {}>>) => import("../../../index.js").UtilityTermOf<import("../../../index.js").PByteString>;
                    };
                }>;
            };
            PStakingPtr: {
                _0: [import("../../../type_system/types.js").PrimType.Int];
                _1: [import("../../../type_system/types.js").PrimType.Int];
                _2: [import("../../../type_system/types.js").PrimType.Int];
            };
        }, import("../../../type_system/types.js").Methods>;
        poolKeyHash: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
    };
    PoolRegistration: {
        poolId: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
        poolVFR: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
    };
    PoolRetire: {
        poolId: [import("../../../type_system/types.js").PrimType.Alias, [import("../../../type_system/types.js").PrimType.BS], import("../../../type_system/types.js").Methods];
        epoch: [import("../../../type_system/types.js").PrimType.Int];
    };
    Genesis: {};
    MoveInstantRewards: {};
}, import("../../../type_system/types.js").Methods>;
