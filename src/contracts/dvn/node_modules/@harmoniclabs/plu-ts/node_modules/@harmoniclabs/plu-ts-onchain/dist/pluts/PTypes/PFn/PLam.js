"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PLam = void 0;
var PType_1 = require("../../PType/index.js");
var Cloneable_1 = require("../../../utils/Cloneable.js");
var PLam = /** @class */ (function (_super) {
    __extends(PLam, _super);
    function PLam(input, output) {
        if (input === void 0) { input = new PType_1.PType; }
        if (output === void 0) { output = new PType_1.PType; }
        var _this = _super.call(this) || this;
        _this._input = input;
        _this._output = output;
        return _this;
    }
    PLam.prototype.clone = function () {
        return new PLam((0, Cloneable_1.isCloneable)(this._input) ? this._input.clone() : this._input, (0, Cloneable_1.isCloneable)(this._output) ? this._output.clone() : this._output);
    };
    return PLam;
}(PType_1.PType));
exports.PLam = PLam;
