export declare const PAddress: import("../../../PTypes/PStruct/pstruct.js").PStruct<{
    PAddress: {
        credential: import("../../../index.js").StructT<{
            PPubKeyCredential: {
                pkh: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
            };
            PScriptCredential: {
                valHash: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
            };
        }, {
            hash: import("../../../index.js").Term<import("../../../index.js").PLam<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                PPubKeyCredential: {
                    pkh: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                };
                PScriptCredential: {
                    valHash: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                };
            }, {}>, import("../../../index.js").PByteString>> & {
                $: (input: import("../../../index.js").PappArg<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                    PPubKeyCredential: {
                        pkh: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                    };
                    PScriptCredential: {
                        valHash: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                    };
                }, {}>>) => import("../../../index.js").UtilityTermOf<import("../../../index.js").PByteString>;
            };
        }>;
        stakingCredential: import("../../../index.js").StructT<{
            Just: {
                val: import("../../../index.js").StructT<{
                    PStakingHash: {
                        _0: import("../../../index.js").StructT<{
                            PPubKeyCredential: {
                                pkh: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                            };
                            PScriptCredential: {
                                valHash: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                            };
                        }, {
                            hash: import("../../../index.js").Term<import("../../../index.js").PLam<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                                PPubKeyCredential: {
                                    pkh: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                                };
                                PScriptCredential: {
                                    valHash: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                                };
                            }, {}>, import("../../../index.js").PByteString>> & {
                                $: (input: import("../../../index.js").PappArg<import("../../../PTypes/PStruct/pstruct.js").PStruct<{
                                    PPubKeyCredential: {
                                        pkh: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                                    };
                                    PScriptCredential: {
                                        valHash: [import("../../../index.js").PrimType.Alias, [import("../../../index.js").PrimType.BS], import("../../../index.js").Methods];
                                    };
                                }, {}>>) => import("../../../index.js").UtilityTermOf<import("../../../index.js").PByteString>;
                            };
                        }>;
                    };
                    PStakingPtr: {
                        _0: [import("../../../index.js").PrimType.Int];
                        _1: [import("../../../index.js").PrimType.Int];
                        _2: [import("../../../index.js").PrimType.Int];
                    };
                }, import("../../../index.js").Methods>;
            };
            Nothing: {};
        }, import("../../../index.js").Methods>;
    };
}, import("../../../index.js").Methods>;
