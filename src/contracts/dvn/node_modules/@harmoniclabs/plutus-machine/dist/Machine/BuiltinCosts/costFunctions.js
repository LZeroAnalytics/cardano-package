"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConstMinOrQuadratic2InXY = exports.ConstYOrLinearZ = exports.Quadratic2InY = exports.Quadratic3InZ = exports.Linear3InMaxYZ = exports.Linear3InYAndZ = exports.Linear3InZ = exports.Linear3InY = exports.Linear3InX = exports.LinearInAll3 = exports.XGtEqOrConst = exports.YGtEqOrConst = exports.LinearOnEqualXY = exports.Linear2InMax = exports.Linear2InMin = exports.Linear2InBothMult = exports.Linear2InBothSub = exports.Linear2InBothAdd = exports.Linear2InY = exports.Linear2InX = exports.Linear1 = exports.FixedCost = void 0;
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var bigint_utils_1 = require("@harmoniclabs/bigint-utils");
var FixedCost = /** @class */ (function () {
    function FixedCost(constant) {
        this.const = BigInt(constant);
    }
    FixedCost.prototype.at = function () {
        var xs = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            xs[_i] = arguments[_i];
        }
        return this.const;
    };
    return FixedCost;
}());
exports.FixedCost = FixedCost;
var BaseLinear = /** @class */ (function () {
    function BaseLinear(quote, slope) {
        this.quote = BigInt(quote);
        this.slope = BigInt(slope);
    }
    return BaseLinear;
}());
var Linear1 = /** @class */ (function (_super) {
    __extends(Linear1, _super);
    function Linear1(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear1.prototype.at = function (x) { return this.quote + (x * this.slope); };
    return Linear1;
}(BaseLinear));
exports.Linear1 = Linear1;
var Linear2InX = /** @class */ (function (_super) {
    __extends(Linear2InX, _super);
    function Linear2InX(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InX.prototype.at = function (x, y) { return this.quote + (x * this.slope); };
    return Linear2InX;
}(BaseLinear));
exports.Linear2InX = Linear2InX;
var Linear2InY = /** @class */ (function (_super) {
    __extends(Linear2InY, _super);
    function Linear2InY(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InY.prototype.at = function (x, y) { return this.quote + (y * this.slope); };
    return Linear2InY;
}(BaseLinear));
exports.Linear2InY = Linear2InY;
var Linear2InBothAdd = /** @class */ (function (_super) {
    __extends(Linear2InBothAdd, _super);
    function Linear2InBothAdd(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InBothAdd.prototype.at = function (x, y) { return this.quote + ((x + y) * this.slope); };
    return Linear2InBothAdd;
}(BaseLinear));
exports.Linear2InBothAdd = Linear2InBothAdd;
var Linear2InBothSub = /** @class */ (function (_super) {
    __extends(Linear2InBothSub, _super);
    function Linear2InBothSub(quote, slope, min) {
        var _this = _super.call(this, quote, slope) || this;
        _this.min = BigInt(min);
        return _this;
    }
    Linear2InBothSub.prototype.at = function (x, y) { return this.quote + ((0, bigint_utils_1.max)(this.min, (x - y)) * this.slope); };
    return Linear2InBothSub;
}(BaseLinear));
exports.Linear2InBothSub = Linear2InBothSub;
var Linear2InBothMult = /** @class */ (function (_super) {
    __extends(Linear2InBothMult, _super);
    function Linear2InBothMult(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InBothMult.prototype.at = function (x, y) { return this.quote + ((x * y) * this.slope); };
    return Linear2InBothMult;
}(BaseLinear));
exports.Linear2InBothMult = Linear2InBothMult;
var Linear2InMin = /** @class */ (function (_super) {
    __extends(Linear2InMin, _super);
    function Linear2InMin(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InMin.prototype.at = function (x, y) { return this.quote + ((0, bigint_utils_1.min)(x, y) * this.slope); };
    return Linear2InMin;
}(BaseLinear));
exports.Linear2InMin = Linear2InMin;
var Linear2InMax = /** @class */ (function (_super) {
    __extends(Linear2InMax, _super);
    function Linear2InMax(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear2InMax.prototype.at = function (x, y) { return this.quote + ((0, bigint_utils_1.max)(x, y) * this.slope); };
    return Linear2InMax;
}(BaseLinear));
exports.Linear2InMax = Linear2InMax;
var LinearOnEqualXY = /** @class */ (function (_super) {
    __extends(LinearOnEqualXY, _super);
    function LinearOnEqualXY(quote, slope, constant) {
        var _this = _super.call(this, quote, slope) || this;
        _this.const = BigInt(constant);
        return _this;
    }
    LinearOnEqualXY.prototype.at = function (x, y) { return x === y ? this.quote + (x * this.slope) : this.const; };
    return LinearOnEqualXY;
}(BaseLinear));
exports.LinearOnEqualXY = LinearOnEqualXY;
var YGtEqOrConst = /** @class */ (function () {
    function YGtEqOrConst(constant, f) {
        this.const = BigInt(constant);
        this.f = f;
    }
    YGtEqOrConst.prototype.at = function (x, y) { return x > y ? this.const : this.f.at(x, y); };
    return YGtEqOrConst;
}());
exports.YGtEqOrConst = YGtEqOrConst;
var XGtEqOrConst = /** @class */ (function () {
    function XGtEqOrConst(constant, f) {
        this.const = BigInt(constant);
        this.f = f;
    }
    XGtEqOrConst.prototype.at = function (x, y) { return x < y ? this.const : this.f.at(x, y); };
    return XGtEqOrConst;
}());
exports.XGtEqOrConst = XGtEqOrConst;
var LinearInAll3 = /** @class */ (function (_super) {
    __extends(LinearInAll3, _super);
    function LinearInAll3(quote, slope, constant) {
        return _super.call(this, quote, slope) || this;
    }
    LinearInAll3.prototype.at = function (x, y, z) { return this.quote + ((x + y + z) * this.slope); };
    return LinearInAll3;
}(BaseLinear));
exports.LinearInAll3 = LinearInAll3;
var Linear3InX = /** @class */ (function (_super) {
    __extends(Linear3InX, _super);
    function Linear3InX(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InX.prototype.at = function (x, y, z) { return this.quote + (x * this.slope); };
    return Linear3InX;
}(BaseLinear));
exports.Linear3InX = Linear3InX;
var Linear3InY = /** @class */ (function (_super) {
    __extends(Linear3InY, _super);
    function Linear3InY(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InY.prototype.at = function (x, y, z) { return this.quote + (y * this.slope); };
    return Linear3InY;
}(BaseLinear));
exports.Linear3InY = Linear3InY;
var Linear3InZ = /** @class */ (function (_super) {
    __extends(Linear3InZ, _super);
    function Linear3InZ(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InZ.prototype.at = function (x, y, z) { return this.quote + (z * this.slope); };
    return Linear3InZ;
}(BaseLinear));
exports.Linear3InZ = Linear3InZ;
var Linear3InYAndZ = /** @class */ (function () {
    function Linear3InYAndZ(quote, slope1, slope2) {
        this.quote = quote;
        this.slope1 = slope1;
        this.slope2 = slope2;
    }
    Linear3InYAndZ.prototype.at = function (_x, y, z) { return this.quote + (y * this.slope1) + (z * this.slope2); };
    return Linear3InYAndZ;
}());
exports.Linear3InYAndZ = Linear3InYAndZ;
var Linear3InMaxYZ = /** @class */ (function (_super) {
    __extends(Linear3InMaxYZ, _super);
    function Linear3InMaxYZ(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    Linear3InMaxYZ.prototype.at = function (x, y, z) { return this.quote + ((0, bigint_utils_1.max)(y, z) * this.slope); };
    return Linear3InMaxYZ;
}(BaseLinear));
exports.Linear3InMaxYZ = Linear3InMaxYZ;
/**
 * function in the form of
 * `a + b * x + c * (x**2)`
 */
var BaseQuadratic = /** @class */ (function () {
    function BaseQuadratic(x0, x1, x2) {
        this.x0 = BigInt(x0);
        this.x1 = BigInt(x1);
        this.x2 = BigInt(x2);
    }
    return BaseQuadratic;
}());
var Quadratic3InZ = /** @class */ (function (_super) {
    __extends(Quadratic3InZ, _super);
    function Quadratic3InZ(x0, x1, x2) {
        return _super.call(this, x0, x1, x2) || this;
    }
    Quadratic3InZ.prototype.at = function (x, y, z) {
        return this.x0 + (this.x1 * z) + (this.x2 * z * z);
    };
    ;
    return Quadratic3InZ;
}(BaseQuadratic));
exports.Quadratic3InZ = Quadratic3InZ;
var Quadratic2InY = /** @class */ (function (_super) {
    __extends(Quadratic2InY, _super);
    function Quadratic2InY(x0, x1, x2) {
        return _super.call(this, x0, x1, x2) || this;
    }
    Quadratic2InY.prototype.at = function (x, y) {
        return this.x0 + (this.x1 * y) + (this.x2 * y * y);
    };
    ;
    return Quadratic2InY;
}(BaseQuadratic));
exports.Quadratic2InY = Quadratic2InY;
var _0n = BigInt(0);
var ConstYOrLinearZ = /** @class */ (function (_super) {
    __extends(ConstYOrLinearZ, _super);
    function ConstYOrLinearZ(quote, slope) {
        return _super.call(this, quote, slope) || this;
    }
    ConstYOrLinearZ.prototype.at = function (x, y, z) {
        return y === _0n ? this.quote + (this.slope * z) : y;
    };
    return ConstYOrLinearZ;
}(BaseLinear));
exports.ConstYOrLinearZ = ConstYOrLinearZ;
/**
 * function in the form of
 * c00 + c10*x + c01*y + c20*x*x + c11*x*y + c02 * y
 */
var BaseDoubleQuadratic = /** @class */ (function () {
    function BaseDoubleQuadratic(c00, c01, c02, c10, c11, c20) {
        (0, obj_utils_1.defineReadOnlyProperty)(this, "c00", BigInt(c00));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "c01", BigInt(c01));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "c02", BigInt(c02));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "c10", BigInt(c10));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "c11", BigInt(c11));
        (0, obj_utils_1.defineReadOnlyProperty)(this, "c20", BigInt(c20));
    }
    return BaseDoubleQuadratic;
}());
var ConstMinOrQuadratic2InXY = /** @class */ (function (_super) {
    __extends(ConstMinOrQuadratic2InXY, _super);
    function ConstMinOrQuadratic2InXY(constant, minimum, c00, c01, c02, c10, c11, c20) {
        var _this = _super.call(this, c00, c01, c02, c10, c11, c20) || this;
        (0, obj_utils_1.defineReadOnlyProperty)(_this, "constant", BigInt(constant));
        (0, obj_utils_1.defineReadOnlyProperty)(_this, "minimum", BigInt(minimum));
        return _this;
    }
    ConstMinOrQuadratic2InXY.prototype.at = function (x, y) {
        if (x < y)
            return this.constant;
        var _a = this, c00 = _a.c00, c01 = _a.c01, c02 = _a.c02, c10 = _a.c10, c11 = _a.c11, c20 = _a.c20, minimum = _a.minimum;
        var real = c00 + c10 * x + c01 * y + c20 * x * x + c11 * x * y + c02 * y;
        return real < minimum ? minimum : real;
    };
    ;
    return ConstMinOrQuadratic2InXY;
}(BaseDoubleQuadratic));
exports.ConstMinOrQuadratic2InXY = ConstMinOrQuadratic2InXY;
