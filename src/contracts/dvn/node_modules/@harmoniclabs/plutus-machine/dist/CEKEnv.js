"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CEKEnv = void 0;
var CEKEnv = /** @class */ (function () {
    function CEKEnv(heapRef, init) {
        if (init === void 0) { init = []; }
        this._heapRef = heapRef;
        this._heapPtrs = init;
    }
    CEKEnv.prototype.clone = function () {
        return new CEKEnv(this._heapRef, this._heapPtrs.map(function (ptr) { return ptr; }));
    };
    CEKEnv.prototype.push = function (varValue) {
        this._heapPtrs.push(this._heapRef.add(varValue));
    };
    CEKEnv.prototype.get = function (dbn) {
        var _dbn = typeof dbn === "bigint" ? Number(dbn) :
            dbn;
        if ((this._heapPtrs.length - _dbn) < 1)
            return undefined;
        return this._heapRef.get(this._heapPtrs[this._heapPtrs.length - 1 - _dbn]);
    };
    CEKEnv.eq = function (a, b) {
        if (!(a instanceof CEKEnv ||
            b instanceof CEKEnv))
            return false;
        if (a === b)
            return true; // shallow eq
        return (a._heapRef === b._heapRef &&
            a._heapPtrs.length === b._heapPtrs.length &&
            a._heapPtrs.every(function (ptr, i) { return ptr === b._heapPtrs[i]; }));
    };
    return CEKEnv;
}());
exports.CEKEnv = CEKEnv;
