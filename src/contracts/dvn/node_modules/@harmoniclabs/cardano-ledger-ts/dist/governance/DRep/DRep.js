"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.drepFromCborObj = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var DRepAlwaysAbstain_1 = require("./DRepAlwaysAbstain.js");
var DRepAlwaysNoConfidence_1 = require("./DRepAlwaysNoConfidence.js");
var DRepKeyHash_1 = require("./DRepKeyHash.js");
var DRepScript_1 = require("./DRepScript.js");
var DRepType_1 = require("./DRepType.js");
function drepFromCborObj(cbor) {
    if (!(cbor instanceof cbor_1.CborArray &&
        cbor.array.length > 0 &&
        cbor.array[0] instanceof cbor_1.CborUInt))
        throw new Error("invalid cbor for 'Certificate'");
    var drepType = Number(cbor.array[0].num);
    if (!(0, DRepType_1.isDRepType)(drepType))
        throw new Error("invalid drepType for 'Certificate'; " + drepType.toString());
    switch (drepType) {
        case DRepType_1.DRepType.KeyHash: return DRepKeyHash_1.DRepKeyHash.fromCborObj(cbor);
        case DRepType_1.DRepType.Script: return DRepScript_1.DRepScript.fromCborObj(cbor);
        case DRepType_1.DRepType.AlwaysAbstain: return new DRepAlwaysAbstain_1.DRepAlwaysAbstain();
        case DRepType_1.DRepType.AlwaysNoConfidence: return new DRepAlwaysNoConfidence_1.DRepAlwaysNoConfidence();
        default: throw new Error("unknown drep type");
    }
}
exports.drepFromCborObj = drepFromCborObj;
