"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GovActionUpdateCommittee = exports.isIGovActionUpdateCommittee = exports.isINewCommitteeEntry = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var Rational_1 = require("../../ledger/protocol/Rational.js");
var tx_1 = require("../../tx/index.js");
var GovActionType_1 = require("./GovActionType.js");
var credentials_1 = require("../../credentials/index.js");
var roDescr_1 = require("../../utils/roDescr.js");
var ints_1 = require("../../utils/ints.js");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var plutus_data_1 = require("@harmoniclabs/plutus-data");
var maybeData_1 = require("../../utils/maybeData.js");
function isINewCommitteeEntry(stuff) {
    return (0, obj_utils_1.isObject)(stuff) && (stuff.coldCredential instanceof credentials_1.Credential &&
        (0, ints_1.canBeUInteger)(stuff.epoch));
}
exports.isINewCommitteeEntry = isINewCommitteeEntry;
function isIGovActionUpdateCommittee(stuff) {
    return (0, obj_utils_1.isObject)(stuff) && (stuff.govActionId === undefined || (0, tx_1.isITxOutRef)(stuff.govActionId) &&
        Array.isArray(stuff.toRemove) &&
        stuff.toRemove.length > 0 &&
        stuff.toRemove.every(function (elem) { return elem instanceof credentials_1.Credential; }) &&
        Array.isArray(stuff.toAdd) &&
        stuff.toAdd.length > 0 &&
        stuff.toAdd.every(isINewCommitteeEntry) &&
        (0, Rational_1.isRational)(stuff.threshold));
}
exports.isIGovActionUpdateCommittee = isIGovActionUpdateCommittee;
var GovActionUpdateCommittee = /** @class */ (function () {
    function GovActionUpdateCommittee(_a, subCborRef) {
        var govActionId = _a.govActionId, toRemove = _a.toRemove, toAdd = _a.toAdd, threshold = _a.threshold;
        this.subCborRef = subCborRef;
        Object.defineProperties(this, {
            govActionType: __assign({ value: GovActionType_1.GovActionType.UpdateCommittee }, roDescr_1.roDescr),
            govActionId: __assign({ value: (0, tx_1.isITxOutRef)(govActionId) ? new tx_1.TxOutRef(govActionId) : undefined }, roDescr_1.roDescr),
            toRemove: __assign({ value: toRemove.slice() }, roDescr_1.roDescr),
            toAdd: __assign({ value: toAdd.map(function (_a) {
                    var coldCredential = _a.coldCredential, epoch = _a.epoch;
                    return ({ coldCredential: coldCredential, epoch: (0, ints_1.forceBigUInt)(epoch) });
                }) }, roDescr_1.roDescr),
            threshold: __assign({ value: (0, Rational_1.cborFromRational)(threshold).clone() }, roDescr_1.roDescr)
        });
    }
    GovActionUpdateCommittee.prototype.toCbor = function () {
        if (this.subCborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return new cbor_1.CborString(this.subCborRef.toBuffer());
        }
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    GovActionUpdateCommittee.prototype.toCborObj = function () {
        var _a, _b;
        return new cbor_1.CborArray([
            new cbor_1.CborUInt(this.govActionType),
            (_b = (_a = this.govActionId) === null || _a === void 0 ? void 0 : _a.toCborObj()) !== null && _b !== void 0 ? _b : new cbor_1.CborSimple(null),
            new cbor_1.CborArray(this.toRemove.map(function (cred) { return cred.toCborObj(); })),
            new cbor_1.CborMap(this.toAdd
                .map(function (_a) {
                var coldCredential = _a.coldCredential, epoch = _a.epoch;
                return ({
                    k: coldCredential.toCborObj(),
                    v: new cbor_1.CborUInt(epoch)
                });
            })),
            this.threshold.clone()
        ]);
    };
    GovActionUpdateCommittee.prototype.toData = function (v) {
        var _a;
        v = "v3"; // only one supported so far
        return new plutus_data_1.DataConstr(4, [
            (0, maybeData_1.maybeData)((_a = this.govActionId) === null || _a === void 0 ? void 0 : _a.toData(v)),
            new plutus_data_1.DataList(this.toRemove.map(function (cred) { return cred.toData(v); })),
            new plutus_data_1.DataMap(this.toAdd.map(function (_a) {
                var coldCredential = _a.coldCredential, epoch = _a.epoch;
                return new plutus_data_1.DataPair(coldCredential.toData(v), new plutus_data_1.DataI(epoch));
            })),
            new plutus_data_1.DataConstr(0, [
                new plutus_data_1.DataI(this.threshold.num),
                new plutus_data_1.DataI(this.threshold.den),
            ])
        ]);
    };
    return GovActionUpdateCommittee;
}());
exports.GovActionUpdateCommittee = GovActionUpdateCommittee;
