"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCostModelArrV1 = void 0;
function toCostModelArrV1(v1) {
    if (Array.isArray(v1))
        return v1;
    // order matters; cant do `Object.keys`
    return Object.freeze([
        v1["addInteger-cpu-arguments-intercept"],
        v1["addInteger-cpu-arguments-slope"],
        v1["addInteger-memory-arguments-intercept"],
        v1["addInteger-memory-arguments-slope"],
        v1["appendByteString-cpu-arguments-intercept"],
        v1["appendByteString-cpu-arguments-slope"],
        v1["appendByteString-memory-arguments-intercept"],
        v1["appendByteString-memory-arguments-slope"],
        v1["appendString-cpu-arguments-intercept"],
        v1["appendString-cpu-arguments-slope"],
        v1["appendString-memory-arguments-intercept"],
        v1["appendString-memory-arguments-slope"],
        v1["bData-cpu-arguments"],
        v1["bData-memory-arguments"],
        v1["blake2b_256-cpu-arguments-intercept"],
        v1["blake2b_256-cpu-arguments-slope"],
        v1["blake2b_256-memory-arguments"],
        v1["cekApplyCost-exBudgetCPU"],
        v1["cekApplyCost-exBudgetMemory"],
        v1["cekBuiltinCost-exBudgetCPU"],
        v1["cekBuiltinCost-exBudgetMemory"],
        v1["cekConstCost-exBudgetCPU"],
        v1["cekConstCost-exBudgetMemory"],
        v1["cekDelayCost-exBudgetCPU"],
        v1["cekDelayCost-exBudgetMemory"],
        v1["cekForceCost-exBudgetCPU"],
        v1["cekForceCost-exBudgetMemory"],
        v1["cekLamCost-exBudgetCPU"],
        v1["cekLamCost-exBudgetMemory"],
        v1["cekStartupCost-exBudgetCPU"],
        v1["cekStartupCost-exBudgetMemory"],
        v1["cekVarCost-exBudgetCPU"],
        v1["cekVarCost-exBudgetMemory"],
        v1["chooseData-cpu-arguments"],
        v1["chooseData-memory-arguments"],
        v1["chooseList-cpu-arguments"],
        v1["chooseList-memory-arguments"],
        v1["chooseUnit-cpu-arguments"],
        v1["chooseUnit-memory-arguments"],
        v1["consByteString-cpu-arguments-intercept"],
        v1["consByteString-cpu-arguments-slope"],
        v1["consByteString-memory-arguments-intercept"],
        v1["consByteString-memory-arguments-slope"],
        v1["constrData-cpu-arguments"],
        v1["constrData-memory-arguments"],
        v1["decodeUtf8-cpu-arguments-intercept"],
        v1["decodeUtf8-cpu-arguments-slope"],
        v1["decodeUtf8-memory-arguments-intercept"],
        v1["decodeUtf8-memory-arguments-slope"],
        v1["divideInteger-cpu-arguments-constant"],
        v1["divideInteger-cpu-arguments-model-arguments-intercept"],
        v1["divideInteger-cpu-arguments-model-arguments-slope"],
        v1["divideInteger-memory-arguments-intercept"],
        v1["divideInteger-memory-arguments-minimum"],
        v1["divideInteger-memory-arguments-slope"],
        v1["encodeUtf8-cpu-arguments-intercept"],
        v1["encodeUtf8-cpu-arguments-slope"],
        v1["encodeUtf8-memory-arguments-intercept"],
        v1["encodeUtf8-memory-arguments-slope"],
        v1["equalsByteString-cpu-arguments-constant"],
        v1["equalsByteString-cpu-arguments-intercept"],
        v1["equalsByteString-cpu-arguments-slope"],
        v1["equalsByteString-memory-arguments"],
        v1["equalsData-cpu-arguments-intercept"],
        v1["equalsData-cpu-arguments-slope"],
        v1["equalsData-memory-arguments"],
        v1["equalsInteger-cpu-arguments-intercept"],
        v1["equalsInteger-cpu-arguments-slope"],
        v1["equalsInteger-memory-arguments"],
        v1["equalsString-cpu-arguments-constant"],
        v1["equalsString-cpu-arguments-intercept"],
        v1["equalsString-cpu-arguments-slope"],
        v1["equalsString-memory-arguments"],
        v1["fstPair-cpu-arguments"],
        v1["fstPair-memory-arguments"],
        v1["headList-cpu-arguments"],
        v1["headList-memory-arguments"],
        v1["iData-cpu-arguments"],
        v1["iData-memory-arguments"],
        v1["ifThenElse-cpu-arguments"],
        v1["ifThenElse-memory-arguments"],
        v1["indexByteString-cpu-arguments"],
        v1["indexByteString-memory-arguments"],
        v1["lengthOfByteString-cpu-arguments"],
        v1["lengthOfByteString-memory-arguments"],
        v1["lessThanByteString-cpu-arguments-intercept"],
        v1["lessThanByteString-cpu-arguments-slope"],
        v1["lessThanByteString-memory-arguments"],
        v1["lessThanEqualsByteString-cpu-arguments-intercept"],
        v1["lessThanEqualsByteString-cpu-arguments-slope"],
        v1["lessThanEqualsByteString-memory-arguments"],
        v1["lessThanEqualsInteger-cpu-arguments-intercept"],
        v1["lessThanEqualsInteger-cpu-arguments-slope"],
        v1["lessThanEqualsInteger-memory-arguments"],
        v1["lessThanInteger-cpu-arguments-intercept"],
        v1["lessThanInteger-cpu-arguments-slope"],
        v1["lessThanInteger-memory-arguments"],
        v1["listData-cpu-arguments"],
        v1["listData-memory-arguments"],
        v1["mapData-cpu-arguments"],
        v1["mapData-memory-arguments"],
        v1["mkCons-cpu-arguments"],
        v1["mkCons-memory-arguments"],
        v1["mkNilData-cpu-arguments"],
        v1["mkNilData-memory-arguments"],
        v1["mkNilPairData-cpu-arguments"],
        v1["mkNilPairData-memory-arguments"],
        v1["mkPairData-cpu-arguments"],
        v1["mkPairData-memory-arguments"],
        v1["modInteger-cpu-arguments-constant"],
        v1["modInteger-cpu-arguments-model-arguments-intercept"],
        v1["modInteger-cpu-arguments-model-arguments-slope"],
        v1["modInteger-memory-arguments-intercept"],
        v1["modInteger-memory-arguments-minimum"],
        v1["modInteger-memory-arguments-slope"],
        v1["multiplyInteger-cpu-arguments-intercept"],
        v1["multiplyInteger-cpu-arguments-slope"],
        v1["multiplyInteger-memory-arguments-intercept"],
        v1["multiplyInteger-memory-arguments-slope"],
        v1["nullList-cpu-arguments"],
        v1["nullList-memory-arguments"],
        v1["quotientInteger-cpu-arguments-constant"],
        v1["quotientInteger-cpu-arguments-model-arguments-intercept"],
        v1["quotientInteger-cpu-arguments-model-arguments-slope"],
        v1["quotientInteger-memory-arguments-intercept"],
        v1["quotientInteger-memory-arguments-minimum"],
        v1["quotientInteger-memory-arguments-slope"],
        v1["remainderInteger-cpu-arguments-constant"],
        v1["remainderInteger-cpu-arguments-model-arguments-intercept"],
        v1["remainderInteger-cpu-arguments-model-arguments-slope"],
        v1["remainderInteger-memory-arguments-intercept"],
        v1["remainderInteger-memory-arguments-minimum"],
        v1["remainderInteger-memory-arguments-slope"],
        v1["sha2_256-cpu-arguments-intercept"],
        v1["sha2_256-cpu-arguments-slope"],
        v1["sha2_256-memory-arguments"],
        v1["sha3_256-cpu-arguments-intercept"],
        v1["sha3_256-cpu-arguments-slope"],
        v1["sha3_256-memory-arguments"],
        v1["sliceByteString-cpu-arguments-intercept"],
        v1["sliceByteString-cpu-arguments-slope"],
        v1["sliceByteString-memory-arguments-intercept"],
        v1["sliceByteString-memory-arguments-slope"],
        v1["sndPair-cpu-arguments"],
        v1["sndPair-memory-arguments"],
        v1["subtractInteger-cpu-arguments-intercept"],
        v1["subtractInteger-cpu-arguments-slope"],
        v1["subtractInteger-memory-arguments-intercept"],
        v1["subtractInteger-memory-arguments-slope"],
        v1["tailList-cpu-arguments"],
        v1["tailList-memory-arguments"],
        v1["trace-cpu-arguments"],
        v1["trace-memory-arguments"],
        v1["unBData-cpu-arguments"],
        v1["unBData-memory-arguments"],
        v1["unConstrData-cpu-arguments"],
        v1["unConstrData-memory-arguments"],
        v1["unIData-cpu-arguments"],
        v1["unIData-memory-arguments"],
        v1["unListData-cpu-arguments"],
        v1["unListData-memory-arguments"],
        v1["unMapData-cpu-arguments"],
        v1["unMapData-memory-arguments"],
        v1["verifyEd25519Signature-cpu-arguments-intercept"],
        v1["verifyEd25519Signature-cpu-arguments-slope"],
        v1["verifyEd25519Signature-memory-arguments"],
    ]);
}
exports.toCostModelArrV1 = toCostModelArrV1;
