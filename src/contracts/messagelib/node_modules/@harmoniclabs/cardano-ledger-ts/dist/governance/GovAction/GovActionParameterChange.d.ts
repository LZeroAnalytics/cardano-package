import { CborArray, CborString, SubCborRef, ToCbor } from "@harmoniclabs/cbor";
import { CanBeHash28, Hash28 } from "../../hashes/index.js";
import { ITxOutRef, TxOutRef } from "../../tx/index.js";
import { GovActionType } from "./GovActionType.js";
import { IGovAction } from "./IGovAction.js";
import { DataConstr, ToData } from "@harmoniclabs/plutus-data";
import { ToDataVersion } from "../../toData/defaultToDataVersion.js";
import { ProtocolParameters } from "../../ledger/protocol/ProtocolParameters.js";
export interface IGovActionParameterChange {
    govActionId?: ITxOutRef | undefined;
    protocolParamsUpdate: Partial<ProtocolParameters>;
    policyHash?: CanBeHash28 | undefined;
}
export declare function isIGovActionParameterChange(stuff: any): stuff is IGovActionParameterChange;
export declare class GovActionParameterChange implements IGovAction, IGovActionParameterChange, ToCbor, ToData {
    readonly subCborRef?: SubCborRef | undefined;
    readonly govActionType: GovActionType.ParameterChange;
    readonly govActionId: TxOutRef | undefined;
    readonly protocolParamsUpdate: Partial<ProtocolParameters>;
    readonly policyHash: Hash28 | undefined;
    constructor({ govActionId, protocolParamsUpdate, policyHash }: IGovActionParameterChange, subCborRef?: SubCborRef | undefined);
    toCbor(): CborString;
    toCborObj(): CborArray;
    toData(v?: ToDataVersion): DataConstr;
}
