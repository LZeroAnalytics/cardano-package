"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GovActionNewConstitution = exports.isIGovActionNewConstitution = void 0;
var cbor_1 = require("@harmoniclabs/cbor");
var tx_1 = require("../../tx/index.js");
var Constitution_1 = require("../Constitution.js");
var GovActionType_1 = require("./GovActionType.js");
var roDescr_1 = require("../../utils/roDescr.js");
var obj_utils_1 = require("@harmoniclabs/obj-utils");
var plutus_data_1 = require("@harmoniclabs/plutus-data");
var maybeData_1 = require("../../utils/maybeData.js");
function isIGovActionNewConstitution(stuff) {
    return (0, obj_utils_1.isObject)(stuff) && (stuff.govActionId === undefined || (0, tx_1.isITxOutRef)(stuff.govActionId) &&
        (0, Constitution_1.isIConstitution)(stuff.constitution));
}
exports.isIGovActionNewConstitution = isIGovActionNewConstitution;
var GovActionNewConstitution = /** @class */ (function () {
    function GovActionNewConstitution(_a, subCborRef) {
        var govActionId = _a.govActionId, constitution = _a.constitution;
        this.subCborRef = subCborRef;
        Object.defineProperties(this, {
            govActionType: __assign({ value: GovActionType_1.GovActionType.NewConstitution }, roDescr_1.roDescr),
            govActionId: __assign({ value: (0, tx_1.isITxOutRef)(govActionId) ? new tx_1.TxOutRef(govActionId) : undefined }, roDescr_1.roDescr),
            constitution: __assign({ value: new Constitution_1.Constitution(constitution) }, roDescr_1.roDescr)
        });
    }
    GovActionNewConstitution.prototype.toCbor = function () {
        if (this.subCborRef instanceof cbor_1.SubCborRef) {
            // TODO: validate cbor structure
            // we assume correctness here
            return new cbor_1.CborString(this.subCborRef.toBuffer());
        }
        return cbor_1.Cbor.encode(this.toCborObj());
    };
    GovActionNewConstitution.prototype.toCborObj = function () {
        var _a, _b;
        return new cbor_1.CborArray([
            new cbor_1.CborUInt(this.govActionType),
            (_b = (_a = this.govActionId) === null || _a === void 0 ? void 0 : _a.toCborObj()) !== null && _b !== void 0 ? _b : new cbor_1.CborSimple(null),
            this.constitution.toCborObj()
        ]);
    };
    GovActionNewConstitution.prototype.toData = function (v) {
        var _a;
        v = "v3"; // only one supported so far
        return new plutus_data_1.DataConstr(5, [
            (0, maybeData_1.maybeData)((_a = this.govActionId) === null || _a === void 0 ? void 0 : _a.toData(v)),
            this.constitution.toData(v)
        ]);
    };
    return GovActionNewConstitution;
}());
exports.GovActionNewConstitution = GovActionNewConstitution;
