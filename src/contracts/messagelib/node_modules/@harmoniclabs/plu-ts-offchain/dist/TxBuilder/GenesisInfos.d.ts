import { CanBeUInteger } from "../utils/ints.js";
export interface GenesisInfos {
    /**
     * @deprecated use `systemStartPosixMs` instead
     *
     * POSIX timestamp of blockchain start
     * with **milliseconds precision**
    **/
    systemStartPOSIX?: CanBeUInteger;
    /**
     *
     * POSIX timestamp of blockchain start
     * with **milliseconds precision**
    **/
    readonly systemStartPosixMs?: CanBeUInteger;
    /**
     * @deprecated use `slotLengthMs` instead
     *
     * slot duration in **milliseconds**
    **/
    slotLengthInMilliseconds?: CanBeUInteger;
    /**
     * slot duration in **milliseconds**
    **/
    readonly slotLengthMs?: CanBeUInteger;
    /**
     * slot number of the slot at `systemStartPosixMs` time
     *
     * @default 0
     */
    readonly startSlotNo?: CanBeUInteger;
}
export interface NormalizedGenesisInfos {
    /**
     *
     * POSIX timestamp of blockchain start
     * with **milliseconds precision**
    **/
    readonly systemStartPosixMs: number;
    /**
     * slot duration in **milliseconds**
    **/
    readonly slotLengthMs: number;
    /**
     * slot number of the slot at `systemStartPosixMs` time
     */
    readonly startSlotNo: number;
}
export declare function normalizedGenesisInfos(gInfo: GenesisInfos): NormalizedGenesisInfos;
export declare const defaultPreviewGenesisInfos: GenesisInfos;
export declare const defaultPreprodGenesisInfos: GenesisInfos;
export declare const defaultMainnetGenesisInfos: GenesisInfos;
export declare function isGenesisInfos(stuff: any): stuff is GenesisInfos;
export declare function isNormalizedGenesisInfos(stuff: any): stuff is NormalizedGenesisInfos;
