"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCostModelArrV3 = void 0;
var ints_1 = require("../utils/ints.js");
var costModelV3Keys_1 = require("./costModelV3Keys.js");
var defaultV3Costs_1 = require("./defaultV3Costs.js");
var N_COST_MODEL_PLUTUS_V3_1 = require("./N_COST_MODEL_PLUTUS_V3.js");
function toCostModelArrV3(v3) {
    if (Array.isArray(v3))
        return fillV3ArrCosts(v3);
    return Object.freeze(costModelV3Keys_1.costModelV3Keys.map(function (k) { return getV3Key(v3, k); }));
}
exports.toCostModelArrV3 = toCostModelArrV3;
function fillV3ArrCosts(arr) {
    var reuslt = new Array(N_COST_MODEL_PLUTUS_V3_1.N_COST_MODEL_PLUTUS_V3);
    var i = 0;
    for (; i < arr.length || i < N_COST_MODEL_PLUTUS_V3_1.N_COST_MODEL_PLUTUS_V3; i++) {
        var value = arr[i];
        reuslt[i] = Number((0, ints_1.canBeInteger)(value) ? value :
            defaultV3Costs_1.defaultV3Costs[costModelV3Keys_1.costModelV3Keys[i]]);
    }
    for (; i < N_COST_MODEL_PLUTUS_V3_1.N_COST_MODEL_PLUTUS_V3; i++) {
        reuslt[i] = Number(defaultV3Costs_1.defaultV3Costs[costModelV3Keys_1.costModelV3Keys[i]]);
    }
    return reuslt;
}
function getV3Key(obj, key) {
    var value = obj[key];
    if (!(0, ints_1.canBeInteger)(value))
        return Number(defaultV3Costs_1.defaultV3Costs[key]);
    return Number(value);
}
