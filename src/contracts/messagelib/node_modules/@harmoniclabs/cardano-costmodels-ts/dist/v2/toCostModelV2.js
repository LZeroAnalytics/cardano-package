"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCostModelV2 = void 0;
var isArrayish_1 = require("../utils/isArrayish.js");
var costModelV2Keys_1 = require("./costModelV2Keys.js");
var defaultV2Costs_1 = require("./defaultV2Costs.js");
var N_COST_MODEL_PLUTUS_V2_1 = require("./N_COST_MODEL_PLUTUS_V2.js");
function toCostModelV2(v2) {
    if ((0, isArrayish_1.isArrayish)(v2))
        v2 = (0, isArrayish_1.forceArrayish)(v2);
    if (!Array.isArray(v2))
        return __assign(__assign({}, defaultV2Costs_1.defaultV2Costs), v2);
    var result = __assign({}, defaultV2Costs_1.defaultV2Costs);
    if (v2.length < N_COST_MODEL_PLUTUS_V2_1.N_COST_MODEL_PLUTUS_V2)
        throw new Error("impossible to convert cost model v2 array to object; not enough arguments; arguments found in total: " + v2.length.toString());
    for (var i = 0; i < N_COST_MODEL_PLUTUS_V2_1.N_COST_MODEL_PLUTUS_V2; i++) {
        result[costModelV2Keys_1.costModelV2Keys[i]] = BigInt(v2[i]);
    }
    return result;
}
exports.toCostModelV2 = toCostModelV2;
