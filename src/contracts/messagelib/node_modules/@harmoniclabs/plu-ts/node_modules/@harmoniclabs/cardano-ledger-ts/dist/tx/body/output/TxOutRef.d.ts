import { ToCbor, CborString, CborObj, CanBeCborString } from "@harmoniclabs/cbor";
import { ToData, DataConstr } from "@harmoniclabs/plutus-data";
import { Hash32 } from "../../../hashes/index.js";
import { ToJson } from "../../../utils/ToJson.js";
export type TxOutRefStr = `${string}#${number}`;
export interface ITxOutRef {
    id: string | Hash32;
    index: number;
}
export declare function isITxOutRef(stuff: any): stuff is ITxOutRef;
export declare function ITxOutRefToStr(iRef: ITxOutRef): TxOutRefStr;
export type UTxORefJson = {
    id: string;
    index: number;
};
export declare class TxOutRef implements ITxOutRef, ToData, ToCbor, ToJson {
    readonly id: Hash32;
    readonly index: number;
    constructor({ id, index }: ITxOutRef);
    toString(): TxOutRefStr;
    toData(): DataConstr;
    toCbor(): CborString;
    toCborObj(): CborObj;
    static fromCbor(cStr: CanBeCborString): TxOutRef;
    static fromCborObj(cObj: CborObj): TxOutRef;
    toJson(): UTxORefJson;
    static get fake(): TxOutRef;
}
