import { Cloneable } from "@harmoniclabs/cbor/dist/utils/Cloneable";
import { ToJson } from "../../utils/ToJson.js";
import { IHash } from "../interfaces/IHash.js";
import { IIRParent } from "../interfaces/IIRParent.js";
import { IRParentTerm } from "../utils/isIRParentTerm.js";
import { BaseIRMetadata } from "./BaseIRMetadata.js";
export interface IRErrorMetadata extends BaseIRMetadata {
}
export declare class IRError implements Cloneable<IRError>, IHash, IIRParent, ToJson {
    readonly hash: Uint8Array;
    markHashAsInvalid: () => void;
    readonly meta: IRErrorMetadata;
    parent: IRParentTerm | undefined;
    msg?: string;
    addInfos?: any;
    constructor(msg?: string, addInfos?: any);
    static get tag(): Uint8Array;
    clone(): IRError;
    toJson(): {
        type: string;
    };
}
